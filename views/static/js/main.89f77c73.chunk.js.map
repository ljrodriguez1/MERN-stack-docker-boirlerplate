{"version":3,"sources":["utils/setAuthToken.js","controller/actions/authActions.js","controller/actions/types.js","controller/reducers/users.js","constants/actionsTypes.js","utils/getCookie.js","controller/reducers/currentUser.js","controller/reducers/debug.js","controller/reducers/common.js","controller/reducers/chats.js","controller/reducers/currentChat.js","controller/reducers/authReducer.js","controller/reducers/errorReducer.js","controller/reducers/index.js","controller/actions/users.js","constants/connectionStatuses.js","controller/actions/debug.js","controller/sockets/helpers.js","utils/debug.js","utils/normalizeTypingUsers.js","controller/sockets/index.js","constants/API.js","controller/actions/common.js","controller/actions/messages.js","controller/actions/chats.js","controller/sagas/index.js","utils/name.js","utils/logger.js","initialState.js","store.js","components/layout/Navbar.js","components/layout/Landing.js","components/auth/Register.js","components/auth/Login.js","components/Sidebar/AreaIndicators/index.js","components/Sidebar/Unit/index.js","containers/Unit.js","components/Spinner/index.js","components/LoadingPlaceholder/index.js","components/Sidebar/Users/index.js","components/Sidebar/Rooms/index.js","containers/Users.js","containers/Rooms.js","components/Sidebar/Favorites/index.js","containers/Favorites.js","components/SectionTitle/index.js","components/Sidebar/index.js","components/Main/Statuses/index.js","containers/Statuses.js","utils/getTime.js","components/Main/Messages/MessageRegular.js","components/Main/Messages/MessageUser.js","components/Main/Messages/MessagesList.js","components/Main/Chat/index.js","containers/Chat.js","components/Main/LiveMessageTyping/index.js","components/Main/Messages/AddMessage.js","containers/AddMessage.js","components/Main/index.js","components/PopUp/index.js","helpers/debugMessageHandlers.js","components/DebugInfo/index.js","containers/Sidebar.js","containers/Main.js","layout/index.js","components/private-route/PrivateRoute.js","components/dashboard/Dashboard.js","App.js","serviceWorker.js","index.js"],"names":["setAuthToken","token","axios","defaults","headers","common","setCurrentUser","decoded","type","payload","logoutUser","dispatch","localStorage","removeItem","users","state","action","list","getCookie","jwtToken","console","log","currentUser","find","user","cookie","connectionStatus","status","favoriteChats","debug","errorType","errorMessage","showDebug","disableBlurOverlay","disableBlur","typingUsers","showSidebar","unreadedChats","JSON","parse","stringify","unreadedMessages","length","unrededChat","ID","chat","push","unreadedCount","forEach","id","splice","filter","chatID","chats","map","channel","messages","layout","messageType","message","author","timestamp","uuid","uuidAuthor","localState","stateKeys","Object","keys","chatsToUpdate","updatedChannel","some","chatToInsert","newChat","currentChat","chatType","title","isEmpty","require","initialState","isAuthenticated","loading","combineReducers","auth","errors","userDisconected","hideDebug","websocketsHelpers","subscribeUser","socket","name","jwt_decode","send","dataParser","event","data","DEBUG_TIMER_ID","normalizeTypingUsers","getState","setupSocket","username","WebSocket","startPostponeTimer","delay","setTimeout","clearPostponeTimer","isConnected","clearTimeout","postponeDebugTimers","onopen","onmessage","errorPayload","initialLoad","currentMessageChat","messageReceived","liveTyping","onclose","rootSaga","sendMessage","sendFavorite","sendTyping","actionPayload","createNewDiretChat","sagahelper","loginUser","removeUser","takeEvery","takeLatest","nombre","undefined","logger","createLogger","collapsed","diff","isAuth","direct","rooms","middleware","thunk","sagaMiddleware","createSagaMiddleware","store","createStore","reducers","compose","applyMiddleware","run","Navbar","className","to","style","fontFamily","Component","Landing","height","width","borderRadius","letterSpacing","Register","onChange","e","setState","target","value","onSubmit","preventDefault","newUser","email","password","password2","props","registerUser","history","this","nextProps","paddingLeft","noValidate","error","classnames","invalid","htmlFor","marginTop","connect","userData","post","then","res","catch","err","response","withRouter","Login","dispatchLogin","emailnotfound","passwordincorrect","setItem","AREAS_NAMES","1","svg","fill","xmlns","viewBox","d","2","AreaIndicators","_handleClick","area","currentTarget","dataset","setActiveArea","_renderDots","areas","activeArea","Array","from","index","areaData","classNames","dot","toUpperCase","data-area","key","onClick","React","PureComponent","defaultProps","Unit","_createDirectChatID","configuration","_directChat","config","createNewDirectChat","directChatID","currentUserID","allowedUsers","_selectChat","chatSelected","toString","userID","Number","_handleDown","persist","prevState","coordsStart","X","clientX","Y","clientY","_handleUp","coordsFinish","_unreadedMessagesFlag","currentChatID","isChatHasUnreadedMessages","unreadedChat","String","isCurrentUser","authorContainer","authorDisconnected","data-id","data-title","onMouseDown","onMouseUp","data-jdenticon-value","unreadedMessagesRead","chatConfig","Spinner","color","preserveAspectRatio","transform","cx","cy","r","attributeName","calcMode","values","times","keySplines","repeatCount","dur","begin","LoadingPlaceholder","text","UsersList","_sortUserByTimestamp","sortA","sortB","_renderUsers","sort","Rooms","Users","_renderRooms","room","Favorites","_findFavorite","directs","favorites","favoritesList","channelsIterator","channels","favoriteChannel","channelType","realID","userName","SectionTitle","children","ZONES_TRANSLATE_SHIFT","shift","Sidebar","_getMouseCoord","touchCoord","touches","Math","ceil","mouseCoord","_isMoveInDangerZone","currentMove","sliderTranlateXStart","_handleMove","_getCurrentArea","currentArea","moveForward","areaName","_setCurrentArea","moveBack","_addMoveEvents","ref","current","addEventListener","_removeMoveEvents","removeEventListener","_setStartCoords","_handleSetCurrentArea","_handleContexMenu","_renderTitle","_renderSection","section","createRef","prevProps","sidebar","sidebarListShow","role","aria-valuemax","aria-valuemin","aria-valuenow","tabIndex","onTouchStart","onTouchEnd","onMouseLeave","onContextMenu","HEARTS","thin","full","Statuses","_handleToggleClick","sidebarToggler","_handleFavoriteClick","setFavorite","currentChatType","_getSidebarToggle","_getFavoriteButton","userFavoriteChats","currentHeart","_getUsersCountInChat","_getConnectionStatus","connectionStatusesClasses","connectionStatusIcon–°onnected","connectionStatusIconDisconnected","isFavorite","getTimestamp","date","Date","hours","getHours","minutes","getMinutes","MessageRegular","MessageUser","_renderDate","MessagesList","_messageTypes","_setScrollHeightState","scrollHeight","_setScrollTop","currentRef","scrollTop","_getCurrentUserMessages","currentUserName","spitedMessage","split","isCurrentUserMessage","join","_renderMessages","Chat","_getCurrentChatMessages","LiveMessageTyping","_findCurrentChatTypingUsers","chatTypingUsers","typingUser","_getTypingUsers","typingUsersNames","_renderTypingText","typingPostfixCounter","typingUsersString","isSomeoneTyping","AddMessage","_getMessageTimestamp","now","_handleSendMessage","dispatchMessage","_resetStateValue","_setStateValue","_onKeyPressHandler","_onClickHandler","_onChangeHandler","dispatchLiveTyping","onKeyPress","placeholder","addMessage","userTyping","AddMessageComponent","Main","_hideSidebar","hideSidebar","onKeyDown","PopUp","userDisconnected","isCloseButton","button","active","href","document","location","buttonClass","buttonText","userIsNotConnected","showSpinner","DebugInfo","_getDebugData","debugHandlers","_renderMessage","_renderSpinner","_getCustomButton","isLink","CustomButtonTag","buttonConfig","_getCloseButton","hideDebugFunc","_renderButtons","AppLayout","_connectionLayoutChecker","connectedUserOvelay","disconnectedUserOverlay","destroyBlurOverlay","_renderMainApp","Fragment","component","rest","render","Dashboard","onLogoutClick","currentTime","exp","window","App","exact","path","Boolean","hostname","match","ReactDOM","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.89f77c73.chunk.js","sourcesContent":["import axios from \"axios\";\nconst setAuthToken = token => {\n  if (token) {\n    // Apply authorization token to every request if logged in\n    axios.defaults.headers.common[\"Authorization\"] = token;\n  } else {\n    // Delete auth header\n    delete axios.defaults.headers.common[\"Authorization\"];\n  }\n};\nexport default setAuthToken;","import axios from \"axios\";\nimport setAuthToken from \"../../utils/setAuthToken\";\nimport jwt_decode from \"jwt-decode\";\nimport {\n  GET_ERRORS,\n  SET_CURRENT_USER,\n  USER_LOADING\n} from \"./types\";\n\n// Register User\nexport const registerUser = (userData, history) => dispatch => {\n  axios\n    .post(\"/api/users/register\", userData)\n    .then(res => history.push(\"/login\")) // re-direct to login on successful register\n    .catch(err =>\n      dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data\n      })\n    );\n};\n// Login - get user token\nexport const loginUser = userData => dispatch => {\n  axios\n    .post(\"/api/users/login\", userData)\n    .then(res => {\n      // Save to localStorage\n// Set token to localStorage\n      const { token } = res.data;\n      localStorage.setItem(\"jwtToken\", token);\n      // Set token to Auth header\n      setAuthToken(token);\n      // Decode token to get user data\n      const decoded = jwt_decode(token);\n      // Set current user\n      dispatch(setCurrentUser(decoded));\n      const payload = {\n        name: decoded.name,\n        cookie: token\n      }\n      //dispatch(addUser(payload))\n    })\n    .catch(err =>\n      dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data\n      })\n    );\n};\n// Set logged in user\nexport const setCurrentUser = decoded => {\n  return {\n    type: SET_CURRENT_USER,\n    payload: decoded\n  };\n};\n// User loading\nexport const setUserLoading = () => {\n  return {\n    type: USER_LOADING\n  };\n};\n// Log user out\nexport const logoutUser = () => dispatch => {\n  // Remove token from local storage\n  localStorage.removeItem(\"jwtToken\");\n  // Remove auth header for future requests\n  setAuthToken(false);\n  // Set current user to empty object {} which will set isAuthenticated to false\n  dispatch(setCurrentUser({}));\n};","export const GET_ERRORS = \"GET_ERRORS\";\nexport const USER_LOADING = \"USER_LOADING\";\nexport const SET_CURRENT_USER = \"SET_CURRENT_USER\";","import { INITIAL_DATA, ADD_USER, NEW_USER_CONNECTED } from '../../constants/actionsTypes';\n\nconst users = (state = [], action) => {\n  switch (action.type) {\n    case INITIAL_DATA:\n      return {\n        ...state,\n        list: [...state.list, ...action.users]\n      };\n    //case ADD_USER:\n     // return {\n     //   ...state,\n     //   list: [\n     //     ...state.list,\n     //     {\n     //       name: action.name,\n     //       uuid: action.uuid\n     //     }\n     //   ]\n     // };\n    case NEW_USER_CONNECTED:\n      return {\n        ...state,\n        list: [...action.users]\n      };\n    default:\n      return state;\n  }\n};\n\nexport default users;\n","const INITIAL_DATA = 'INITIAL_DATA';\nconst ADD_MESSAGE = 'ADD_MESSAGE';\nconst ADD_USER = 'ADD_USER';\nconst USERS_LIST = 'USERS_LIST';\nconst NEW_USER_CONNECTED = 'NEW_USER_CONNECTED';\nconst MESSAGE_RECEIVED = 'MESSAGE_RECEIVED';\nconst USER_DISCONECTED = 'USER_DISCONECTED';\nconst USER_INTIALIZATION_START = 'USER_INTIALIZATION_START';\nconst USER_INTIALIZATION_FINISH = 'USER_INTIALIZATION_FINISH';\nconst ERROR_RECEIVED = 'ERROR_RECEIVED';\nconst SHOW_DEBUG = 'SHOW_DEBUG';\nconst HIDE_DEBUG = 'HIDE_DEBUG';\nconst SIDEBAR_TOGGLER = 'SIDEBAR_TOGGLER';\nconst HIDE_DEBUG_MANUAL = 'HIDE_DEBUG_MANUAL';\nconst SOMEONE_TYPING = 'SOMEONE_TYPING';\nconst USER_TYPING = 'USER_TYPING';\nconst SELECT_CURRENT_CHAT = 'SELECT_CURRENT_CHAT';\nconst CHAT_SELECTED = 'CHAT_SELECTED';\nconst CREATE_NEW_CHAT = 'CREATE_NEW_CHAT';\nconst NEW_CHAT_CREATED = 'NEW_CHAT_CREATED';\nconst HIDE_SIDEBAR = 'HIDE_SIDEBAR';\nconst SET_FAVORITE = 'SET_FAVORITE';\nconst FAVORITE_CHANNEL_SETTED = 'FAVORITE_CHANNEL_SETTED';\nconst FAVORIVE_CHANNEL_ADDED = 'FAVORIVE_CHANNEL_ADDED';\nconst UNREADED_MESSAGE = 'UNREADED_MESSAGE';\nconst LOGIN = 'LOGIN';\n\nexport {\n  INITIAL_DATA,\n  ADD_MESSAGE,\n  ADD_USER,\n  USERS_LIST,\n  NEW_USER_CONNECTED,\n  MESSAGE_RECEIVED,\n  USER_DISCONECTED,\n  USER_INTIALIZATION_START,\n  USER_INTIALIZATION_FINISH,\n  ERROR_RECEIVED,\n  SHOW_DEBUG,\n  HIDE_DEBUG,\n  SIDEBAR_TOGGLER,\n  HIDE_DEBUG_MANUAL,\n  SOMEONE_TYPING,\n  USER_TYPING,\n  SELECT_CURRENT_CHAT,\n  CHAT_SELECTED,\n  CREATE_NEW_CHAT,\n  NEW_CHAT_CREATED,\n  HIDE_SIDEBAR,\n  SET_FAVORITE,\n  FAVORITE_CHANNEL_SETTED,\n  FAVORIVE_CHANNEL_ADDED,\n  UNREADED_MESSAGE,\n  LOGIN\n};\n","const getCookie = () => {\n  if (localStorage.jwtToken) {\n    console.log(localStorage.jwtToken)\n    return localStorage.jwtToken;\n  }\n  return undefined\n};\n\nexport default getCookie;\n\n","import { INITIAL_DATA, USER_DISCONECTED, USER_INTIALIZATION_START, USER_INTIALIZATION_FINISH, FAVORIVE_CHANNEL_ADDED } from '../../constants/actionsTypes';\nimport getCookie from '../../utils/getCookie';\n\nconst currentUser = (state = {}, action) => {\n  switch (action.type) {\n    case INITIAL_DATA:\n      return {\n        ...state,\n        ...action.users.find(user => user.cookie === getCookie())\n      };\n    case USER_INTIALIZATION_START:\n      return {\n        ...state,\n        connectionStatus: action.status\n      };\n    case USER_INTIALIZATION_FINISH:\n      return {\n        ...state,\n        connectionStatus: action.status\n      };\n    case USER_DISCONECTED:\n      return {\n        ...state,\n        connectionStatus: action.status\n      };\n    case FAVORIVE_CHANNEL_ADDED:\n      return {\n        ...state,\n        favoriteChats: action.favoriteChats\n      };\n    default:\n      return state;\n  }\n};\n\nexport default currentUser;\n","import { USER_DISCONECTED, USER_INTIALIZATION_START, USER_INTIALIZATION_FINISH, ERROR_RECEIVED, SHOW_DEBUG, HIDE_DEBUG, HIDE_DEBUG_MANUAL } from '../../constants/actionsTypes';\n\nconst debug = (state = [], action) => {\n  switch (action.type) {\n    case USER_INTIALIZATION_START:\n      return {\n        ...state,\n        errorType: action.errorType\n      };\n    case USER_INTIALIZATION_FINISH:\n      return {\n        ...state,\n        errorType: action.errorType\n      };\n    case USER_DISCONECTED:\n      return {\n        ...state,\n        errorType: action.errorType\n      };\n    case ERROR_RECEIVED:\n      return {\n        ...state,\n        errorType: action.errorType,\n        errorMessage: action.errorMessage\n      };\n    case SHOW_DEBUG:\n      return {\n        ...state,\n        showDebug: action.showDebug\n      };\n    case HIDE_DEBUG:\n      return {\n        ...state,\n        showDebug: action.showDebug\n      };\n    case HIDE_DEBUG_MANUAL:\n      return {\n        ...state,\n        showDebug: action.showDebug\n      };\n    default:\n      return state;\n  }\n};\n\nexport default debug;\n","import { HIDE_DEBUG_MANUAL, SOMEONE_TYPING, SIDEBAR_TOGGLER, HIDE_SIDEBAR, UNREADED_MESSAGE, CHAT_SELECTED } from '../../constants/actionsTypes';\n\nconst common = (state = [], action) => {\n  switch (action.type) {\n    case HIDE_DEBUG_MANUAL:\n      return {\n        ...state,\n        disableBlurOverlay: action.disableBlur\n      };\n    case SOMEONE_TYPING:\n      return {\n        ...state,\n        typingUsers: action.typingUsers\n      };\n    case SIDEBAR_TOGGLER:\n      return {\n        ...state,\n        showSidebar: !state.showSidebar\n      };\n    case HIDE_SIDEBAR:\n      return {\n        ...state,\n        showSidebar: action.status\n      };\n    case UNREADED_MESSAGE:\n      // eslint-disable-next-line no-case-declarations\n      const unreadedChats = JSON.parse(JSON.stringify(state.unreadedMessages));\n\n      if (state.unreadedMessages.length <= 0 || !unreadedChats.find(unrededChat => unrededChat.ID === action.chat.ID)) {\n        unreadedChats.push({\n          ID: action.chat.ID,\n          type: action.chat.type,\n          unreadedCount: 1\n        });\n      } else {\n        unreadedChats.forEach((chat, id) => (\n          chat.ID === action.chat.ID && unreadedChats.splice(id, 1, {\n            ...chat,\n            unreadedCount: chat.unreadedCount + 1\n          })\n        ));\n      }\n\n      return {\n        ...state,\n        unreadedMessages: unreadedChats\n      };\n    case CHAT_SELECTED:\n      return {\n        ...state,\n        unreadedMessages: state.unreadedMessages.filter(chat => {\n          return chat.ID !== action.payload.chatID;\n        })\n      };\n    default:\n      return state;\n  }\n};\n\nexport default common;\n","import { INITIAL_DATA, ADD_MESSAGE, MESSAGE_RECEIVED, NEW_CHAT_CREATED } from '../../constants';\n\nconst chats = (state = {}, action) => {\n  switch (action.type) {\n    case INITIAL_DATA:\n      return {\n        ...state,\n        ...action.chats\n      };\n    case ADD_MESSAGE:\n      return {\n        ...state,\n        [action.chat.type]: state[action.chat.type].map(channel => (\n          channel.ID === action.chat.ID ?\n            {\n              ...channel,\n              messages: [\n                ...channel.messages,\n                {\n                  layout: action.messageType,\n                  message: action.message,\n                  author: action.author,\n                  timestamp: action.timestamp,\n                  uuid: action.uuid,\n                  uuidAuthor: action.uuidAuthor\n                }\n              ]\n            } : channel))\n      };\n    case MESSAGE_RECEIVED:\n      // eslint-disable-next-line no-case-declarations\n      const localState = JSON.parse(JSON.stringify(state)); // creating sn object without reference\n      // eslint-disable-next-line no-case-declarations\n      const stateKeys = Object.keys(localState);\n      // eslint-disable-next-line no-case-declarations\n      const chatsToUpdate = stateKeys.map(chat => (\n        {\n          [chat]: localState[chat].map(channel => {\n            const updatedChannel = channel;\n\n            if (action.chats.some(chatToInsert => chatToInsert.ID === updatedChannel.ID)) {\n              updatedChannel.messages.push(action.message);\n            }\n\n            return updatedChannel;\n          })\n        }\n      ))[0];\n\n      return {\n        ...localState,\n        ...chatsToUpdate\n      };\n    case NEW_CHAT_CREATED:\n      return {\n        ...state,\n        [action.payload.newChat.type]: [\n          ...state[action.payload.newChat.type],\n          action.payload.newChat\n        ]\n      };\n    default:\n      return state;\n  }\n};\n\nexport default chats;\n","import { CHAT_SELECTED } from '../../constants/actionsTypes';\n\nconst currentChat = (state = {}, action) => {\n  switch (action.type) {\n    case CHAT_SELECTED:\n      return {\n        ...state,\n        chatType: action.payload.chatType,\n        chatID: action.payload.chatID,\n        title: action.payload.title\n      };\n    default:\n      return state;\n  }\n};\n\nexport default currentChat;\n","import {\n    SET_CURRENT_USER,\n    USER_LOADING\n} from \"../actions/types\";\n\nconst isEmpty = require(\"is-empty\");\n\n\nconst initialState = {\n  isAuthenticated: false,\n  user: {},\n  loading: false\n};\nexport default function authReducer(state = initialState, action) {\n  switch (action.type) {\n    case SET_CURRENT_USER:\n      return {\n        ...state,\n        isAuthenticated: !isEmpty(action.payload),\n        user: action.payload\n      };\n    case USER_LOADING:\n      return {\n        ...state,\n        loading: true\n      };\n    default:\n      return state;\n  }\n}","import { GET_ERRORS } from \"../actions/types\";\n\nconst initialState = {};\n\nexport default function errorReducer(state = initialState, action) {\n  switch (action.type) {\n    case GET_ERRORS:\n      return action.payload;\n    default:\n      return state;\n  }\n}","import { combineReducers } from 'redux';\n// import { responsiveStateReducer } from 'redux-responsive';\n\nimport users from './users';\nimport currentUser from './currentUser';\nimport debug from './debug';\nimport common from './common';\nimport chats from './chats';\nimport currentChat from './currentChat';\nimport authReducer from './authReducer';\nimport errorReducer from './errorReducer';\n\nconst chat = combineReducers({\n  currentUser,\n  users,\n  debug,\n  common,\n  chats,\n  currentChat,\n  auth: authReducer,\n  errors: errorReducer\n  // browser: responsiveStateReducer\n});\n\nexport default chat;\n\n","import {\n  ADD_USER,\n  USER_DISCONECTED,\n  USER_INTIALIZATION_START,\n  USER_INTIALIZATION_FINISH,\n  NEW_USER_CONNECTED,\n  FAVORIVE_CHANNEL_ADDED\n} from '../../constants/actionsTypes';\nimport { CONNECTED, IN_PROGRESS, DISCONNECTED } from '../../constants/connectionStatuses';\n\nconst addUser = ({ name, cookie, id }) => ({\n  type: ADD_USER,\n  name,\n  cookie,\n  id\n});\n\nconst populateUsersList = users => ({\n  type: NEW_USER_CONNECTED,\n  users\n});\n\nconst userInitializationStart = () => ({\n  type: USER_INTIALIZATION_START,\n  status: IN_PROGRESS,\n  errorType: 'userIsNotConnected'\n});\n\nconst userInitializationFinish = () => ({\n  type: USER_INTIALIZATION_FINISH,\n  status: CONNECTED,\n  errorType: ''\n});\n\nconst userDisconected = () => ({\n  type: USER_DISCONECTED,\n  status: DISCONNECTED,\n  errorType: 'userDisconnected'\n});\n\nconst favoriteChatAdded = favoriteChats => ({\n  type: FAVORIVE_CHANNEL_ADDED,\n  favoriteChats\n});\n\nexport {\n  addUser,\n  populateUsersList,\n  userInitializationStart,\n  userInitializationFinish,\n  userDisconected,\n  favoriteChatAdded\n};\n","export const CONNECTED = 'connected';\nexport const IN_PROGRESS = 'inProgress';\nexport const NOT_CONNECTED = 'notConnected';\nexport const DISCONNECTED = 'disconnected';\n","import { ERROR_RECEIVED, SHOW_DEBUG, HIDE_DEBUG, HIDE_DEBUG_MANUAL } from '../../constants/actionsTypes';\n\nconst errorReceived = errorPayload => ({\n  type: ERROR_RECEIVED,\n  errorType: errorPayload.errorType,\n  errorMessage: errorPayload.message\n});\n\nconst showDebug = () => ({\n  type: SHOW_DEBUG,\n  showDebug: true\n});\n\nconst hideDebug = () => ({\n  type: HIDE_DEBUG,\n  showDebug: false\n});\n\nconst hideDebugManual = () => ({\n  type: HIDE_DEBUG_MANUAL,\n  showDebug: false,\n  disableBlur: true\n});\n\nexport { errorReceived, showDebug, hideDebug, hideDebugManual };\n","import { ADD_USER } from '../../constants';\nimport jwt_decode from \"jwt-decode\";\n\nimport getCookie from '../../utils/getCookie';\n\nconst websocketsHelpers = () => ({\n  subscribeUser: (socket, name) => {\n    if (localStorage.jwtToken) {\n      const token = localStorage.jwtToken\n      const decoded = jwt_decode(token);\n\n      const payload = {\n        type: ADD_USER,\n        name: decoded.name,\n        cookie: token\n      };\n  \n      socket.send(JSON.stringify(payload));\n    }\n  },\n  dataParser: event => JSON.parse(event.data)\n});\n\nexport default websocketsHelpers;\n","let DEBUG_TIMER_ID = null;\n\nconst postponeDebugTimers = dispatch => ({\n  // eslint-disable-next-line no-unused-vars\n  startPostponeTimer: (action, delay) => {\n    DEBUG_TIMER_ID = setTimeout(() => dispatch(action()), delay);\n  },\n  clearPostponeTimer: (action, getState) => {\n    const {\n      currentUser: { isConnected = false },\n      debug: { showDebug = false }\n    } = getState();\n\n    clearTimeout(DEBUG_TIMER_ID);\n\n    if (!showDebug && isConnected) return;\n\n    dispatch(action());\n  }\n});\n\nexport { postponeDebugTimers };\n","const normalizeTypingUsers = (data, getState) => {\n  const { currentUser: { cookie } = {} } = getState();\n\n  const currentUserInTypingList = () => {\n    return data.typingUsers.some(user => user.cookie === cookie);\n  };\n\n  if (currentUserInTypingList()) {\n    data.typingUsers.splice(\n      0,\n      data.typingUsers.length,\n      ...data.typingUsers.filter(user => user.cookie !== cookie)\n    );\n  }\n};\n\nexport default normalizeTypingUsers;\n","import {\n  initialLoad,\n  populateUsersList,\n  messageReceived,\n  userDisconected,\n  userInitializationStart,\n  userInitializationFinish,\n  errorReceived,\n  showDebug,\n  hideDebug,\n  liveTyping,\n  chatCreated,\n  favoriteChatAdded,\n  unreadedMessages\n} from '../actions';\nimport websocketsHelpers from './helpers';\nimport { postponeDebugTimers } from '../../utils/debug';\nimport normalizeTypingUsers from '../../utils/normalizeTypingUsers';\n\nimport { INITIAL_DATA, ADD_MESSAGE, USERS_LIST, ERROR_RECEIVED, SOMEONE_TYPING, NEW_CHAT_CREATED, FAVORITE_CHANNEL_SETTED } from '../../constants/actionsTypes';\nimport { WSS_END_POINT } from '../../constants/API';\n\nconst setupSocket = ({ getState, dispatch }, username) => {\n  const socket = new WebSocket(WSS_END_POINT);\n  const { startPostponeTimer, clearPostponeTimer } = postponeDebugTimers(dispatch);\n\n  dispatch(userInitializationStart());\n  startPostponeTimer(showDebug, 3000);\n\n  socket.onopen = () => {\n    const { subscribeUser } = websocketsHelpers();\n\n    //subscribeUser(socket, username);\n  };\n\n  socket.onmessage = event => {\n    const { dataParser } = websocketsHelpers();\n\n    const data = dataParser(event);\n\n    switch (data.type) {\n      case INITIAL_DATA:\n        dispatch(initialLoad(data));\n        dispatch(userInitializationFinish());\n        clearPostponeTimer(hideDebug, getState);\n        break;\n      case ADD_MESSAGE:\n        delete data.type;\n        // eslint-disable-next-line no-case-declarations\n        const { currentChat } = getState();\n        // regular message can be only one per receiving\n        // eslint-disable-next-line no-case-declarations\n        const currentMessageChat = data.chats[0];\n        // looking for the messages in chats rather than current user's.\n        // eslint-disable-next-line no-case-declarations\n        const isMessageUnreaded = data.layout === 'message' && currentMessageChat.ID !== currentChat.chatID;\n\n        if (isMessageUnreaded) {\n          dispatch(unreadedMessages({ chat: currentMessageChat }));\n        }\n\n        dispatch(messageReceived(data));\n        break;\n      case USERS_LIST:\n        dispatch(populateUsersList(data.users));\n        break;\n      case NEW_CHAT_CREATED:\n        dispatch(chatCreated(data));\n        break;\n      case SOMEONE_TYPING:\n        delete data.type;\n        normalizeTypingUsers(data, getState);\n        dispatch(liveTyping(data.typingUsers));\n        break;\n      case FAVORITE_CHANNEL_SETTED:\n        dispatch(favoriteChatAdded(data.favoriteChats));\n        break;\n      case ERROR_RECEIVED:\n        dispatch(errorReceived(data));\n        break;\n      default:\n        break;\n    }\n  };\n\n  socket.onclose = () => {\n    dispatch(userDisconected());\n    dispatch(showDebug());\n  };\n\n  return socket;\n};\n\nexport default setupSocket;\n","const WSS_END_POINT = 'wss://iic2713.me/'\n\nexport { WSS_END_POINT };\n","import { INITIAL_DATA, SIDEBAR_TOGGLER, HIDE_SIDEBAR, UNREADED_MESSAGE } from '../../constants/actionsTypes';\n\nconst initialLoad = ({ chats, users, typingUsers }) => ({\n  type: INITIAL_DATA,\n  chats,\n  users,\n  typingUsers\n});\n\nconst unreadedMessages = ({ chat }) => ({\n  type: UNREADED_MESSAGE,\n  chat\n});\n\nconst sidebarToggler = () => ({\n  type: SIDEBAR_TOGGLER\n});\n\nconst hideSidebar = () => ({\n  type: HIDE_SIDEBAR,\n  status: false\n});\n\nexport { initialLoad, sidebarToggler, hideSidebar, unreadedMessages };\n","import { ADD_MESSAGE, MESSAGE_RECEIVED, SOMEONE_TYPING, USER_TYPING } from '../../constants/actionsTypes';\n\nconst addMessage = ({ chat, messageType, message, uuid, uuidAuthor, author, timestamp }) => ({\n  type: ADD_MESSAGE,\n  chat,\n  messageType,\n  uuid,\n  message,\n  uuidAuthor,\n  author,\n  timestamp\n});\n\nconst messageReceived = ({ chats, ...message }) => ({\n  type: MESSAGE_RECEIVED,\n  chats,\n  message\n});\n\nconst liveTyping = payload => ({\n  type: SOMEONE_TYPING,\n  typingUsers: payload\n});\n\nconst userTyping = payload => ({\n  type: USER_TYPING,\n  payload\n});\n\nexport { addMessage, messageReceived, liveTyping, userTyping };\n","import { SELECT_CURRENT_CHAT, NEW_CHAT_CREATED, CHAT_SELECTED } from '../../constants';\nimport { CREATE_NEW_CHAT, SET_FAVORITE } from '../../constants/actionsTypes';\n\nconst selectChat = payload => ({\n  type: SELECT_CURRENT_CHAT,\n  payload\n});\n\nconst createNewDirectChat = payload => ({\n  type: CREATE_NEW_CHAT,\n  payload\n});\n\nconst chatCreated = payload => ({\n  type: NEW_CHAT_CREATED,\n  payload\n});\n\nconst chatSelected = payload => ({\n  type: CHAT_SELECTED,\n  payload\n});\n\nconst setFavorite = payload => ({\n  type: SET_FAVORITE,\n  payload\n});\n\nexport { selectChat, chatSelected, createNewDirectChat, chatCreated, setFavorite };\n","import { takeEvery, takeLatest } from 'redux-saga/effects';\nimport { ADD_MESSAGE, USER_TYPING, SOMEONE_TYPING, CREATE_NEW_CHAT, SET_FAVORITE, ADD_USER } from '../../constants/actionsTypes';\nimport getCookie from '../../utils/getCookie';\n\nfunction sendMessage(socket) {\n  console.log('i did send a message')\n  return action => socket.send(JSON.stringify(action));\n}\n\nfunction sendFavorite(socket) {\n  return action => socket.send(JSON.stringify(action));\n}\n\nfunction sendTyping(socket) {\n  return action => {\n    const actionPayload = {\n      type: SOMEONE_TYPING,\n      chat: action.payload.chat,\n      name: action.payload.author,\n      uuid: action.payload.uuid,\n      cookie: getCookie()\n    };\n\n    socket.send(JSON.stringify(actionPayload));\n  };\n}\n\nfunction createNewDiretChat(socket) {\n  return function* sagahelper(action) {\n    const actionPayload = {\n      ...action,\n      type: CREATE_NEW_CHAT\n    };\n\n    yield socket.send(JSON.stringify(actionPayload));\n  };\n}\n\nfunction loginUser(socket) {\n  console.log('i did here')\n  return action => socket.send(JSON.stringify(action));\n}\nfunction removeUser(socket) {\n  return action => {\n    const actionPayload = {\n      type: 'REMOVE_USER',\n      cookie: getCookie()\n    };\n\n    socket.send(JSON.stringify(actionPayload));\n  };\n}\n\nfunction* rootSaga(socket) {\n  yield takeEvery(ADD_MESSAGE, sendMessage(socket));\n  yield takeLatest(USER_TYPING, sendTyping(socket));\n  yield takeLatest(CREATE_NEW_CHAT, createNewDiretChat(socket));\n  yield takeLatest(SET_FAVORITE, sendFavorite(socket));\n  yield takeEvery(ADD_USER, loginUser(socket));\n  yield takeEvery('USER_DISCONECTED', removeUser(socket));\n\n}\n\nexport default rootSaga;\n","\nimport jwt_decode from \"jwt-decode\";\n\nlet nombre \nif (localStorage.jwtToken) {\n    const token = localStorage.jwtToken\n    const decoded = jwt_decode(token);\n    nombre = decoded.name\n} else {\n    nombre = undefined\n}\nexport default nombre;\n","import { createLogger } from 'redux-logger';\n\nconst logger = createLogger({\n  collapsed: true,\n  timestamp: false,\n  diff: true\n});\n\nexport default logger;\n","const initialState = {\n  currentUser: {\n    isAuth: false,\n    name: '',\n    uuid: null,\n    connectionStatus: 'notConnected'\n  },\n  debug: {\n    errorType: '',\n    errorMessage: '',\n    showDebug: false\n  },\n  users: {\n    list: []\n  },\n  common: {\n    showSidebar: false,\n    disableBlurOverlay: false,\n    unreadedMessages: [],\n    typingUsers: []\n  },\n  chats: {\n    direct: [],\n    rooms: []\n  },\n  currentChat: {\n    title: 'global',\n    chatType: 'rooms',\n    chatID: 'global'\n  }\n};\n\nexport default initialState;\n","import { createStore, applyMiddleware, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\n\n\n\n// import { responsiveStoreEnhancer } from 'redux-responsive';\nimport createSagaMiddleware from 'redux-saga';\n\nimport reducers from './controller/reducers';\nimport setupSocket from './controller/sockets';\nimport rootSaga from './controller/sagas';\n\nimport username from './utils/name';\nimport logger from './utils/logger';\n\nimport initialState from './initialState';\n\nconst middleware = [thunk];\n\nconst sagaMiddleware = createSagaMiddleware();\nconst store = createStore(\n  reducers,\n  initialState,\n  // compose(\n  //   responsiveStoreEnhancer,\n  //   applyMiddleware(sagaMiddleware, logger)\n  // )\n  compose(\n    applyMiddleware(sagaMiddleware, logger),\n    applyMiddleware(...middleware),\n    //window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n  )\n);\n\nconst socket = setupSocket(store, username);\n\nsagaMiddleware.run(rootSaga, socket);\n\n\nexport default store;","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nclass Navbar extends Component {\n  render() {\n    return (\n      <div className=\"navbar-fixed\">\n        <nav className=\"z-depth-0\">\n          <div className=\"nav-wrapper white\">\n            <Link\n              to=\"/\"\n              style={{\n                fontFamily: \"monospace\"\n              }}\n              className=\"col s5 brand-logo center black-text\"\n            >\n              <i className=\"material-icons\">code</i>\n              Lucas Chat App\n            </Link>\n          </div>\n        </nav>\n      </div>\n    );\n  }\n}\nexport default Navbar;","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nclass Landing extends Component {\n  render() {\n    return (\n      <div style={{ height: \"75vh\" }} className=\"container valign-wrapper\">\n        <div className=\"row\">\n          <div className=\"col s12 center-align\">\n            <p className=\"flow-text grey-text text-darken-1\">\n              Create an user or login to join Chat app\n            </p>\n            <br />\n            <div className=\"col s6\">\n              <Link\n                to=\"/register\"\n                style={{\n                  width: \"140px\",\n                  borderRadius: \"3px\",\n                  letterSpacing: \"1.5px\"\n                }}\n                className=\"btn btn-large waves-effect waves-light hoverable blue accent-3\"\n              >\n                Register\n              </Link>\n            </div>\n            <div className=\"col s6\">\n              <Link\n                to=\"/login\"\n                style={{\n                  width: \"140px\",\n                  borderRadius: \"3px\",\n                  letterSpacing: \"1.5px\"\n                }}\n                className=\"btn btn-large btn-flat waves-effect white black-text\"\n              >\n                Log In\n              </Link>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\nexport default Landing;","import React, { Component } from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { registerUser } from \"../../controller/actions/authActions\";\nimport classnames from \"classnames\";\nclass Register extends Component {\n    constructor() {\n        super();\n        this.state = {\n        name: \"\",\n        email: \"\",\n        password: \"\",\n        password2: \"\",\n        errors: {}\n        };\n    }\n    componentDidMount() {\n        // If logged in and user navigates to Register page, should redirect them to dashboard\n        if (this.props.auth.isAuthenticated) {\n          this.props.history.push(\"/dashboard\");\n        }\n      }\n    componentWillReceiveProps(nextProps) {\n        if (nextProps.errors) {\n        this.setState({\n            errors: nextProps.errors\n        });\n        }\n    }\n    onChange = e => {\n        this.setState({ [e.target.id]: e.target.value });\n    };\n    onSubmit = e => {\n        e.preventDefault();\n    const newUser = {\n        name: this.state.name,\n        email: this.state.email,\n        password: this.state.password,\n        password2: this.state.password2\n        };\n    this.props.registerUser(newUser, this.props.history); \n    };\n    render() {\n        const { errors } = this.state;\n    return (\n        <div className=\"container\">\n            <div className=\"row\">\n            <div className=\"col s8 offset-s2\">\n                <Link to=\"/\" className=\"btn-flat waves-effect\">\n                <i className=\"material-icons left\">keyboard_backspace</i> Back to\n                home\n                </Link>\n                <div className=\"col s12\" style={{ paddingLeft: \"11.250px\" }}>\n                <h4>\n                    <b>Register</b> below\n                </h4>\n                <p className=\"grey-text text-darken-1\">\n                    Already have an account? <Link to=\"/login\">Log in</Link>\n                </p>\n                </div>\n                <form noValidate onSubmit={this.onSubmit}>\n                <div className=\"input-field col s12\">\n                    <input\n                    onChange={this.onChange}\n                    value={this.state.name}\n                    error={errors.name}\n                    id=\"name\"\n                    type=\"text\"\n                    className={classnames(\"\", {\n                        invalid: errors.name\n                    })}\n                    />\n                    <label htmlFor=\"name\">Name</label>\n                    <span className=\"red-text\">{errors.name}</span>\n                </div>\n                <div className=\"input-field col s12\">\n                    <input\n                    onChange={this.onChange}\n                    value={this.state.email}\n                    error={errors.email}\n                    id=\"email\"\n                    type=\"email\"\n                    className={classnames(\"\", {\n                        invalid: errors.email\n                    })}\n                    />\n                    <label htmlFor=\"email\">Email</label>\n                    <span className=\"red-text\">{errors.email}</span>\n                </div>\n                <div className=\"input-field col s12\">\n                    <input\n                    onChange={this.onChange}\n                    value={this.state.password}\n                    error={errors.password}\n                    id=\"password\"\n                    type=\"password\"\n                    className={classnames(\"\", {\n                        invalid: errors.password\n                    })}\n                    />\n                    <label htmlFor=\"password\">Password</label>\n                    <span className=\"red-text\">{errors.password}</span>\n                </div>\n                <div className=\"input-field col s12\">\n                    <input\n                    onChange={this.onChange}\n                    value={this.state.password2}\n                    error={errors.password2}\n                    id=\"password2\"\n                    type=\"password\"\n                    className={classnames(\"\", {\n                        invalid: errors.password2\n                    })}\n                    />\n                    <label htmlFor=\"password2\">Confirm Password</label>\n                    <span className=\"red-text\">{errors.password2}</span>\n                </div>\n                <div className=\"col s12\" style={{ paddingLeft: \"11.250px\" }}>\n                    <button\n                    style={{\n                        width: \"150px\",\n                        borderRadius: \"3px\",\n                        letterSpacing: \"1.5px\",\n                        marginTop: \"1rem\"\n                    }}\n                    type=\"submit\"\n                    className=\"btn btn-large waves-effect waves-light hoverable blue accent-3\"\n                    >\n                    Sign up\n                    </button>\n                </div>\n                </form>\n            </div>\n            </div>\n        </div>\n        );\n    }\n}\nRegister.propTypes = {\n  registerUser: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired\n};\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  errors: state.errors\n});\nexport default connect(\n  mapStateToProps,\n  { registerUser }\n)(withRouter(Register));","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { loginUser } from \"../../controller/actions/authActions\";\nimport classnames from \"classnames\";\nimport { addUser } from '../../controller/actions';\n\n\nclass Login extends Component {\n  constructor() {\n    super();\n    this.state = {\n      email: \"\",\n      password: \"\",\n      errors: {}\n    };\n  }\n  componentDidMount() {\n    // If logged in and user navigates to Login page, should redirect them to dashboard\n    if (this.props.auth.isAuthenticated) {\n      const payload = {\n        name: this.props.auth.user.name,\n        cookie: localStorage.jwtToken,\n        id: this.props.auth.user.id,\n      }\n      console.log(payload)\n      this.props.dispatchLogin(payload);\n      console.log('i did add an user')\n      this.props.history.push(\"/dashboard\");\n    }\n  }\n  componentWillReceiveProps(nextProps) {\n      if (nextProps.auth.isAuthenticated) {\n        const payload = {\n          name: nextProps.auth.user.name,\n          cookie: localStorage.jwtToken,\n          id: nextProps.auth.user.id,\n        }\n        console.log('-----------------------------------------------------------------------------------------------------------')\n        console.log(nextProps.auth)\n        console.log(payload)\n        console.log('hola estoy aqui')\n        this.props.dispatchLogin(payload);\n        this.props.history.push(\"/dashboard\"); // push user to dashboard when they login\n      }\n  if (nextProps.errors) {\n        this.setState({\n          errors: nextProps.errors\n        });\n      }\n    }\n  onChange = e => {\n      this.setState({ [e.target.id]: e.target.value });\n    };\n  onSubmit = e => {\n      e.preventDefault();\n      const userData = {\n        email: this.state.email,\n        password: this.state.password\n      };\n      this.props.loginUser(userData); // since we handle the redirect within our component, we don't need to pass in this.props.history as a parameter\n   \n  };\n  render() {\n    const { errors } = this.state;\n    return (\n          <div className=\"container\">\n            <div style={{ marginTop: \"4rem\" }} className=\"row\">\n              <div className=\"col s8 offset-s2\">\n                <Link to=\"/\" className=\"btn-flat waves-effect\">\n                  <i className=\"material-icons left\">keyboard_backspace</i> Back to\n                  home\n                </Link>\n                <div className=\"col s12\" style={{ paddingLeft: \"11.250px\" }}>\n                  <h4>\n                    <b>Login</b> below\n                  </h4>\n                  <p className=\"grey-text text-darken-1\">\n                    Don't have an account? <Link to=\"/register\">Register</Link>\n                  </p>\n                </div>\n                <form noValidate onSubmit={this.onSubmit}>\n                  <div className=\"input-field col s12\">\n                    <input\n                      onChange={this.onChange}\n                      value={this.state.email}\n                      error={errors.email}\n                      id=\"email\"\n                      type=\"email\"\n                      className={classnames(\"\", {\n                        invalid: errors.email || errors.emailnotfound\n                      })}\n                    />\n                    <label htmlFor=\"email\">Email</label>\n                    <span className=\"red-text\">\n                      {errors.email}\n                      {errors.emailnotfound}\n                    </span>\n                  </div>\n                  <div className=\"input-field col s12\">\n                    <input\n                      onChange={this.onChange}\n                      value={this.state.password}\n                      error={errors.password}\n                      id=\"password\"\n                      type=\"password\"\n                      className={classnames(\"\", {\n                        invalid: errors.password || errors.passwordincorrect\n                      })}\n                    />\n                    <label htmlFor=\"password\">Password</label>\n                    <span className=\"red-text\">\n                      {errors.password}\n                      {errors.passwordincorrect}\n                    </span>\n                  </div>\n                  <div className=\"col s12\" style={{ paddingLeft: \"11.250px\" }}>\n                    <button\n                      style={{\n                        width: \"150px\",\n                        borderRadius: \"3px\",\n                        letterSpacing: \"1.5px\",\n                        marginTop: \"1rem\"\n                      }}\n                      type=\"submit\"\n                      className=\"btn btn-large waves-effect waves-light hoverable blue accent-3\"\n                    >\n                      Login\n                    </button>\n                  </div>\n                </form>\n              </div>\n            </div>\n          </div>\n      );\n    }\n}\nLogin.propTypes = {\n  loginUser: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired,\n  dispatchUser: PropTypes.func.isRequired,\n};\nconst mapDispatchToProps = dispatch => ({\n  // eslint-disable-next-line max-len\n  dispatchLogin: payload => dispatch(addUser(payload)),\n  loginUser: payload => dispatch(loginUser(payload))\n});\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  errors: state.errors\n});\n\n\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(Login);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\n\nconst AREAS_NAMES = {\n  //1: {\n  //  name: 'users',\n  //  svg: (\n  //    <svg fill='currentColor' xmlns='http://www.w3.org/2000/svg' width='50' height='50' viewBox='0 0 25 25'>\n  //      <path d='M10.644 17.08c2.866-.662 4.539-1.241 3.246-3.682-3.932-7.427-1.042-11.398 3.111-11.398 4.235 0 7.054 4.124 3.11 11.398-1.332 2.455.437 3.034 3.242 3.682 2.483.574 2.647 1.787 2.647 3.889v1.031h-18c0-2.745-.22-4.258 2.644-4.92zm-12.644 4.92h7.809c-.035-8.177 3.436-5.313 3.436-11.127 0-2.511-1.639-3.873-3.748-3.873-3.115 0-5.282 2.979-2.333 8.549.969 1.83-1.031 2.265-3.181 2.761-1.862.43-1.983 1.34-1.983 2.917v.773z' />\n  //    </svg>\n  //  )\n  //},\n  1: {\n    name: 'rooms',\n    svg: (\n      <svg fill='currentColor' xmlns='http://www.w3.org/2000/svg' width='50' height='50' viewBox='0 0 24 24'>\n        <path\n          xmlns='http://www.w3.org/2000/svg'\n          d='M20 9.352c0-4.852-4.751-8.352-10-8.352-5.281 0-10 3.526-10 8.352 0 1.711.615 3.391 1.705 4.695.047 1.527-.851 3.718-1.661 5.312 2.168-.391 5.252-1.258 6.649-2.115 7.697 1.877 13.307-2.842 13.307-7.892zm-14.5 1.38c-.689 0-1.25-.56-1.25-1.25s.561-1.25 1.25-1.25 1.25.56 1.25 1.25-.561 1.25-1.25 1.25zm4.5 0c-.689 0-1.25-.56-1.25-1.25s.561-1.25 1.25-1.25 1.25.56 1.25 1.25-.561 1.25-1.25 1.25zm4.5 0c-.689 0-1.25-.56-1.25-1.25s.561-1.25 1.25-1.25 1.25.56 1.25 1.25-.561 1.25-1.25 1.25zm8.383 8.789c-.029 1.001.558 2.435 1.088 3.479-1.419-.258-3.438-.824-4.352-1.385-3.365.818-6.114-.29-7.573-2.1 4.557-.66 8.241-3.557 9.489-7.342 1.48.979 2.465 2.491 2.465 4.274 0 1.12-.403 2.221-1.117 3.074z'\n        />\n      </svg>\n    )\n  },\n  2: {\n    name: 'favorites',\n    svg: (\n      <svg fill='currentColor' xmlns='http://www.w3.org/2000/svg' width='50' height='50' viewBox='0 0 24 24'>\n        <path d='M18 1l-6 4-6-4-6 5v7l12 10 12-10v-7z' />\n      </svg>\n    )\n  }\n};\n\nclass AreaIndicators extends React.PureComponent {\n  static propTypes = {\n    areas: PropTypes.number,\n    activeArea: PropTypes.number,\n    setActiveArea: PropTypes.func\n  }\n\n  static defaultProps = {\n    areas: 1,\n    activeArea: 1,\n    setActiveArea: () => {}\n  }\n\n  _handleClick = e => {\n    const {\n      dataset: { area }\n    } = e.currentTarget;\n\n    const { setActiveArea } = this.props;\n\n    setActiveArea(area);\n  }\n\n  _renderDots = () => {\n    const { areas, activeArea } = this.props;\n\n    const areasArray = Array.from(Array(areas).keys());\n\n    const areasArrayDots = areasArray.map((area, index) => {\n      const areaNumber = index + 1;\n      const areaData = AREAS_NAMES[areaNumber];\n\n      const classNames = classnames({\n        dot: true,\n        activeArea: activeArea === index + 1,\n        [`dotArea${areaData.name.toUpperCase()}`]: true\n      });\n\n      return (\n        <button data-area={areaData.name} type='button' key={area} onClick={this._handleClick} className={classNames}>\n          {areaData.svg}\n        </button>\n      );\n    });\n\n    return areasArrayDots;\n  }\n\n  render() {\n    return <div className='dotsWrap'>{this._renderDots()}</div>;\n  }\n}\n\nexport default AreaIndicators;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\n\nclass Unit extends React.PureComponent {\n  static defaultProps = {\n    currentChat: {},\n    isCurrentUser: false,\n    currentUser: {},\n    chats: [],\n    unreadedMessages: [],\n    createNewDirectChat: () => {},\n    chatSelected: () => {},\n    unreadedMessagesRead: () => {}\n  }\n\n  static propTypes = {\n    isCurrentUser: PropTypes.bool,\n    currentUser: PropTypes.object,\n    chats: PropTypes.object,\n    createNewDirectChat: PropTypes.func,\n    chatSelected: PropTypes.func,\n    type: PropTypes.string.isRequired,\n    currentChat: PropTypes.object,\n    unreadedMessages: PropTypes.arrayOf(\n      PropTypes.shape({\n        ID: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n        type: PropTypes.string,\n        unreadedCount: PropTypes.number\n      })\n    ),\n    configuration: PropTypes.shape({\n      ID: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n      uuid: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      isConnected: PropTypes.bool.isRequired\n    }).isRequired,\n    unreadedMessagesRead: PropTypes.func\n  }\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      coordsStart: null\n    };\n  }\n\n  _createDirectChatID = () => {\n    const { currentUser, configuration } = this.props;\n\n    return `${currentUser.uuid + configuration.uuid}`;\n  }\n\n  _directChat = (config, chatID) => {\n    const { currentUser, createNewDirectChat, chats } = this.props;\n\n    const directChatID = this._createDirectChatID();\n\n    config.currentUserID = currentUser.uuid;\n    config.chatID = directChatID;\n    config.allowedUsers = [currentUser.uuid, chatID];\n\n    const chatIsNotBeingCreted = !chats.direct.some(channel => channel.ID === directChatID);\n\n    if (chatIsNotBeingCreted) {\n      createNewDirectChat(config);\n    }\n  }\n\n  _selectChat = e => {\n    const { configuration, chatSelected, type } = this.props;\n    const { dataset: { id: chatID, title } } = e.currentTarget;\n    console.log((configuration.ID).toString())\n    const config = {\n      chatType: type,\n      title,\n      chatID: (configuration.ID).toString(),\n      uuid: configuration.uuid,\n      userID: chatID\n    };\n\n    if (type === 'direct') {\n      this._directChat(config, Number(chatID));\n    }\n\n    chatSelected(config);\n  }\n\n  _handleDown = e => {\n    e.persist();\n\n    this.setState(prevState => ({\n      ...prevState,\n      coordsStart: {\n        X: e.clientX,\n        Y: e.clientY\n      }\n    }));\n  }\n\n  _handleUp = e => {\n    const { coordsStart } = this.state;\n    const coordsFinish = {\n      X: e.clientX,\n      Y: e.clientY\n    };\n\n    const isCoordsSame = JSON.stringify(coordsStart) === JSON.stringify(coordsFinish);\n\n    if (!isCoordsSame) return;\n\n    this._selectChat(e);\n  }\n\n  _unreadedMessagesFlag = () => {\n    const { unreadedMessages, configuration: { ID: currentChatID }, type } = this.props;\n\n    if (!currentChatID || !unreadedMessages || unreadedMessages.length <= 0) {\n      return null;\n    }\n\n    const isChatHasUnreadedMessages = unreadedMessages.find(unreadedChat => {\n      if (type === 'rooms') {\n        return String(unreadedChat.ID) === String(currentChatID);\n      }\n      return String(unreadedChat.ID) === String(this._createDirectChatID());\n    });\n\n    if (!isChatHasUnreadedMessages || isChatHasUnreadedMessages.length === 0) {\n      return null;\n    }\n\n    return (\n      <span className='unrededMessageWrap'>\n        {isChatHasUnreadedMessages.unreadedCount}\n      </span>\n    );\n  }\n\n  render() {\n    const { currentChat, configuration: { name, uuid, isConnected }, isCurrentUser } = this.props;\n\n    const classNames = classnames({\n      authorContainer: true,\n      authorDisconnected: !isConnected,\n      chatSelected: name === currentChat.title\n    });\n\n    return (\n      <button\n        type='button'\n        key={uuid}\n        data-id={uuid}\n        data-title={name}\n        onMouseDown={this._handleDown}\n        onMouseUp={this._handleUp}\n        className={classNames}\n      >\n        <span className='authorAvatar authorWrap'>\n          <svg width='100%' height='100%' data-jdenticon-value={name} />\n        </span>\n        <span className='authorName sidebarAuthorName'>{isCurrentUser ? `${name} (you)` : name}</span>\n        {this._unreadedMessagesFlag()}\n      </button>\n    );\n  }\n}\n\nexport default Unit;\n","import { connect } from 'react-redux';\nimport Unit from '../components/Sidebar/Unit';\nimport { chatSelected, createNewDirectChat } from '../controller/actions';\n\nconst mapStateToProps = state => ({\n  unreadedMessages: state.common.unreadedMessages,\n  currentUser: state.auth.user,\n  currentChat: state.currentChat,\n  chats: state.chats\n});\n\nconst mapDispatchToState = dispatch => ({\n  createNewDirectChat: chatConfig => dispatch(createNewDirectChat(chatConfig)),\n  chatSelected: chatConfig => dispatch(chatSelected(chatConfig))\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToState\n)(Unit);\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass Spinner extends React.PureComponent {\n  static propTypes = {\n    width: PropTypes.string,\n    height: PropTypes.string,\n    color: PropTypes.string\n  }\n\n  static defaultProps = {\n    width: '100%',\n    height: '100%',\n    color: '#d0a85d'\n  }\n\n  render() {\n    const { width, height, color } = this.props;\n\n    return (\n      <span className='loadingSpinner' style={{ width, height }}>\n        <svg className='lds-microsoft' width='100%' height='100%' xmlns='http://www.w3.org/2000/svg' viewBox='0 0 100 100' preserveAspectRatio='xMidYMid'>\n          <g transform='rotate(0)'>\n            <circle cx='73.801' cy='68.263' fill={color} r='3' transform='rotate(359.751 49.9984 49.9984)'>\n              <animateTransform attributeName='transform' type='rotate' calcMode='spline' values='0 50 50;360 50 50' times='0;1' keySplines='0.5 0 0.5 1' repeatCount='indefinite' dur='1.5s' begin='0s' />\n            </circle>\n            <circle cx='68.263' cy='73.801' fill={color} r='3' transform='rotate(0.169908 50 50)'>\n              <animateTransform attributeName='transform' type='rotate' calcMode='spline' values='0 50 50;360 50 50' times='0;1' keySplines='0.5 0 0.5 1' repeatCount='indefinite' dur='1.5s' begin='-0.062s' />\n            </circle>\n            <circle cx='61.481' cy='77.716' fill={color} r='3' transform='rotate(1.83976 50 50)'>\n              <animateTransform attributeName='transform' type='rotate' calcMode='spline' values='0 50 50;360 50 50' times='0;1' keySplines='0.5 0 0.5 1' repeatCount='indefinite' dur='1.5s' begin='-0.125s' />\n            </circle>\n            <circle cx='53.916' cy='79.743' fill={color} r='3' transform='rotate(5.37049 50 50)'>\n              <animateTransform attributeName='transform' type='rotate' calcMode='spline' values='0 50 50;360 50 50' times='0;1' keySplines='0.5 0 0.5 1' repeatCount='indefinite' dur='1.5s' begin='-0.187s' />\n            </circle>\n            <circle cx='46.084' cy='79.743' fill={color} r='3' transform='rotate(11.1162 50 50)'>\n              <animateTransform attributeName='transform' type='rotate' calcMode='spline' values='0 50 50;360 50 50' times='0;1' keySplines='0.5 0 0.5 1' repeatCount='indefinite' dur='1.5s' begin='-0.25s' />\n            </circle>\n            <circle cx='38.519' cy='77.716' fill={color} r='3' transform='rotate(19.1917 50 50)'>\n              <animateTransform attributeName='transform' type='rotate' calcMode='spline' values='0 50 50;360 50 50' times='0;1' keySplines='0.5 0 0.5 1' repeatCount='indefinite' dur='1.5s' begin='-0.312s' />\n            </circle>\n            <circle cx='31.737' cy='73.801' fill={color} r='3' transform='rotate(30.207 50 50)'>\n              <animateTransform attributeName='transform' type='rotate' calcMode='spline' values='0 50 50;360 50 50' times='0;1' keySplines='0.5 0 0.5 1' repeatCount='indefinite' dur='1.5s' begin='-0.375s' />\n            </circle>\n            <circle cx='26.199' cy='68.263' fill={color} r='3' transform='rotate(44.1593 50 50)'>\n              <animateTransform attributeName='transform' type='rotate' calcMode='spline' values='0 50 50;360 50 50' times='0;1' keySplines='0.5 0 0.5 1' repeatCount='indefinite' dur='1.5s' begin='-0.437s' />\n            </circle>\n            <animateTransform attributeName='transform' type='rotate' calcMode='spline' values='0 50 50;0 50 50' times='0;1' keySplines='0.5 0 0.5 1' repeatCount='indefinite' dur='1.5s' />\n          </g>\n        </svg>\n      </span>\n    );\n  }\n}\n\nexport default Spinner;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Spinner from '../Spinner';\n\nclass LoadingPlaceholder extends React.PureComponent {\n  static propTypes = {\n    text: PropTypes.string,\n    width: PropTypes.string,\n    height: PropTypes.string\n  }\n\n  static defaultProps = {\n    text: '',\n    width: '40px',\n    height: '40px'\n  }\n\n  render() {\n    const { text, width, height } = this.props;\n\n    return (\n      <div className='loadingPlaceholder'>\n        <Spinner width={width} height={height} color='#fff' />\n        <span className='placeholderText'>\n          {text}\n        </span>\n      </div>\n    );\n  }\n}\n\nexport default LoadingPlaceholder;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Unit from '../../../containers/Unit';\nimport Placeholder from '../../LoadingPlaceholder';\n\nclass UsersList extends React.PureComponent {\n  static defaultProps = {\n    currentUser: {\n      uuid: null,\n      name: ''\n    },\n    users: []\n  }\n\n  static propTypes = {\n    currentUser: PropTypes.shape({\n      uuid: PropTypes.string,\n      name: PropTypes.string\n    }),\n    users: PropTypes.shape({\n      list: PropTypes.arrayOf(\n        PropTypes.shape({\n          uuid: PropTypes.string,\n          name: PropTypes.string,\n          cookie: PropTypes.string,\n          isConnected: PropTypes.bool\n        })\n      ).isRequired\n    })\n  }\n\n  _sortUserByTimestamp = (sortA, sortB) => {\n    const { currentUser = {} } = this.props;\n\n    if (sortB.cookie === localStorage.jwtToken) {\n      return 1;\n    }\n\n    return sortA.timestamp - sortB.timestamp ? 1 : -1;\n  }\n\n  _renderUsers = () => {\n    const { users = {}, currentUser = {} } = this.props;\n\n    if (!users || users.list.length === 0) {\n      return (\n        <Placeholder text='Trying to load users...' width='40px' height='40px' />\n      );\n    }\n\n    return users.list\n      .sort(this._sortUserByTimestamp)\n      .map(user => {\n        console.log(user)\n        const isCurrentUser = localStorage.jwtToken === user.cookie;\n\n        const configuration = {\n          name: user.name,\n          uuid: user.uuid,\n          ID: currentUser.uuid,\n          isConnected: user.isConnected\n        };\n\n        return (\n          <Unit key={user.uuid} type='direct' configuration={configuration} isCurrentUser={isCurrentUser} />\n        );\n      });\n  };\n\n  render() {\n    return (\n      <div className='usersList'>{this._renderUsers()}</div>\n    );\n  }\n}\n\nexport default UsersList;\n","import React from 'react';\n\nimport PropTypes from 'prop-types';\n\nimport Unit from '../../../containers/Unit';\nimport Placeholder from '../../LoadingPlaceholder';\n\nclass Rooms extends React.PureComponent {\n  static propTypes = {\n    rooms: PropTypes.array.isRequired\n  }\n\n  _renderRooms = () => {\n    const { rooms = {} } = this.props;\n\n    if (!rooms || rooms.length === 0) {\n      return (\n        <Placeholder text='Trying to load rooms...' width='40px' height='40px' />\n      );\n    }\n\n    return rooms.map(room => {\n      const configuration = {\n        name: room.ID,\n        uuid: room.uuid,\n        ID: room.ID,\n        isConnected: true\n      };\n\n      return (\n        <Unit type='rooms' key={room.uuid} configuration={configuration} />\n      );\n    });\n  };\n\n  render() {\n    return (\n      <div className='usersList'>{this._renderRooms()}</div>\n    );\n  }\n}\n\nexport default Rooms;\n","import { connect } from 'react-redux';\nimport Users from '../components/Sidebar/Users';\n\nconst mapStateToProps = state => ({\n  users: state.users,\n  currentUser: state.auth.user\n});\n\nexport default connect(\n  mapStateToProps,\n  null\n)(Users);\n","import { connect } from 'react-redux';\nimport Rooms from '../components/Sidebar/Rooms';\n\nconst mapStateToProps = state => ({\n  rooms: state.chats.rooms\n});\n\nexport default connect(\n  mapStateToProps,\n  null\n)(Rooms);\n","import React from 'react';\n\nimport PropTypes from 'prop-types';\n\nimport Unit from '../../../containers/Unit';\nimport Placeholder from '../../LoadingPlaceholder';\n\nclass Favorites extends React.PureComponent {\n  static propTypes = {\n    directs: PropTypes.array,\n    rooms: PropTypes.array,\n    users: PropTypes.array,\n    favorites: PropTypes.array,\n    currentUser: PropTypes.object\n  }\n\n  static defaultProps = {\n    directs: [],\n    rooms: [],\n    users: [],\n    favorites: [],\n    currentUser: {}\n  }\n\n  _findFavorite = () => {\n    const { directs, rooms, users, favorites, currentUser } = this.props;\n    const favoritesList = [];\n\n    if (!favorites) {\n      return null;\n    }\n\n    const channelsIterator = ({ channels, type }) => {\n      channels.forEach(channel => {\n        favorites.forEach(favoriteChannel => {\n          if ((favoriteChannel.ID !== channel.ID) || (favoriteChannel.type !== channel.type)) {\n            return;\n          }\n\n          const config = {\n            ...channel,\n            channelType: type\n          };\n\n          if (type === 'direct') {\n            const realID = Number(channel.ID) - Number(currentUser.uuid);\n            const userName = users.find(user => user.uuid === realID);\n\n            config.name = userName.name;\n            config.uuid = realID;\n          }\n\n          favoritesList.push(config);\n        });\n      });\n    };\n\n    channelsIterator({ channels: rooms, type: 'rooms' });\n    channelsIterator({ channels: directs, type: 'direct' });\n\n    return favoritesList;\n  }\n\n  _renderRooms = () => {\n    const { rooms = [], users = [] } = this.props;\n\n    if ((!rooms && !users) || rooms.length + users.length === 0) {\n      return <Placeholder text='Trying to load favorites...' width='40px' height='40px' />;\n    }\n\n    const favorites = this._findFavorite();\n\n    return favorites.map(channel => {\n      const configuration = {\n        name: channel.name || channel.ID,\n        uuid: channel.uuid,\n        ID: Number(channel.name && channel.uuid) || channel.ID,\n        isConnected: true\n      };\n\n      return <Unit key={channel.uuid} type={channel.channelType} configuration={configuration} />;\n    });\n  }\n\n  render() {\n    return <div className='usersList'>{this._renderRooms()}</div>;\n  }\n}\n\nexport default Favorites;\n","import { connect } from 'react-redux';\nimport Favorites from '../components/Sidebar/Favorites';\n\nconst mapStateToProps = state => ({\n  directs: state.chats.direct,\n  users: state.users.list,\n  rooms: state.chats.rooms,\n  favorites: state.currentUser.favoriteChats,\n  currentUser: state.currentUser\n});\n\nexport default connect(\n  mapStateToProps,\n  null\n)(Favorites);\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass SectionTitle extends React.PureComponent {\n  static defaultProps = {\n    title: '',\n    children: []\n  }\n\n  static propTypes = {\n    title: PropTypes.string,\n    children: PropTypes.node\n  }\n\n  render() {\n    const { title, children } = this.props;\n\n    return (\n      <div className='sectionTitleWrap'>\n        <span className='sectionTitle usersTitle'>{title}</span>\n        {children}\n        <hr className='boxShadowBefore' />\n      </div>\n    );\n  }\n}\n\nexport default SectionTitle;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\n\nimport AreaIndicators from './AreaIndicators';\nimport Users from '../../containers/Users';\nimport Rooms from '../../containers/Rooms';\nimport Favorites from '../../containers/Favorites';\nimport SectionTitle from '../SectionTitle';\n\nconst ZONES_TRANSLATE_SHIFT = {\n  favorites: {\n    id: 2,\n    shift: -238\n  },\n  rooms: {\n    id: 1,\n    shift: 0\n  },\n  //users: {\n  //  id: 1,\n  //  shift: -238\n  //}\n};\n\nclass Sidebar extends React.PureComponent {\n  static defaultProps = {\n    showSidebar: false\n  }\n\n  static propTypes = {\n    showSidebar: PropTypes.bool\n  }\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      currentArea: 'rooms',\n      sliderTranlateXStart: null\n    };\n\n    this.ref = React.createRef();\n  }\n\n  // eslint-disable-next-line no-unused-vars\n  componentDidUpdate(prevProps, prevState) {\n    const { currentArea } = this.state;\n\n    if (prevState.currentArea !== currentArea) {\n      this._removeMoveEvents();\n    }\n  }\n\n  componentWillUnmount() {\n    this.ref.current.removeEventListener('mousemove', this._handleMove);\n    this.ref.current.removeEventListener('touchmove', this._handleMove);\n  }\n\n  _getMouseCoord = e => {\n    const touchCoord = e.touches && e.touches[0].clientX && Math.ceil(e.touches[0].clientX);\n    const mouseCoord = e.clientX;\n\n    return touchCoord || mouseCoord;\n  }\n\n  _isMoveInDangerZone = (currentMove, sliderTranlateXStart) => {\n    const moveBackDangerZone = currentMove - sliderTranlateXStart > -3;\n    const moveForwardDangerZone = currentMove - sliderTranlateXStart < 3;\n\n    return moveBackDangerZone && moveForwardDangerZone;\n  }\n\n  _handleMove = e => {\n    const { sliderTranlateXStart } = this.state;\n\n    const currentMove = this._getMouseCoord(e);\n\n    if (this._isMoveInDangerZone(currentMove, sliderTranlateXStart)) {\n      return;\n    }\n\n    this._getCurrentArea(currentMove);\n  }\n\n  _getCurrentArea = currentMove => {\n    const { sliderTranlateXStart, currentArea } = this.state;\n\n    const moveForward = areaName => {\n      if (currentMove - sliderTranlateXStart < -10) {\n        this._setCurrentArea(areaName);\n      }\n    };\n\n    const moveBack = areaName => {\n      if (currentMove - sliderTranlateXStart > 10) {\n        this._setCurrentArea(areaName);\n      }\n    };\n\n    if (currentArea === 'users') {\n      moveForward('rooms');\n    } else if (currentArea === 'rooms') {\n      moveForward('favorites');\n      moveBack('users');\n    } else if (currentArea === 'favorites') {\n      moveBack('rooms');\n    }\n  }\n\n  _addMoveEvents = () => {\n    this.ref.current.addEventListener('mousemove', this._handleMove);\n    this.ref.current.addEventListener('touchmove', this._handleMove);\n  }\n\n  _removeMoveEvents = () => {\n    this.ref.current.removeEventListener('mousemove', this._handleMove);\n    this.ref.current.removeEventListener('touchmove', this._handleMove);\n  }\n\n  _handleDown = e => {\n    this._setStartCoords(e);\n    this._addMoveEvents();\n  }\n\n  _handleUp = () => {\n    this._setStartCoords();\n    this._removeMoveEvents();\n  }\n\n  _setCurrentArea = area => {\n    this.setState({\n      currentArea: area\n    });\n  }\n\n  _setStartCoords = e => {\n    this.setState({\n      sliderTranlateXStart: e ? this._getMouseCoord(e) : null\n    });\n  }\n\n  _handleSetCurrentArea = area => this._setCurrentArea(area)\n\n  _handleContexMenu = e => e.preventDefault()\n\n  _renderTitle = title => {\n    return (\n      <div className='titleSidebar'>\n        <SectionTitle title={title} />\n      </div>\n    );\n  }\n\n  _renderSection = ({ className, title, section }) => {\n    return (\n      <div className={`sidebarSection ${className}`}>\n        {this._renderTitle(title)}\n        {section}\n      </div>\n    );\n  }\n\n  render() {\n    const { currentArea } = this.state;\n    const { showSidebar } = this.props;\n\n    const { shift, id } = ZONES_TRANSLATE_SHIFT[currentArea] || {};\n    const classNames = classnames({\n      sidebar: true,\n      sidebarListShow: showSidebar\n    });\n\n    return (\n      <aside\n        id='sidebar'\n        role='slider'\n        aria-valuemax={238}\n        aria-valuemin={0}\n        aria-valuenow={0}\n        tabIndex={0}\n        ref={this.ref}\n        onTouchStart={this._handleDown}\n        onTouchEnd={this._handleUp}\n        onMouseDown={this._handleDown}\n        onMouseUp={this._handleUp}\n        onMouseLeave={this._handleUp}\n        onContextMenu={this._handleContexMenu}\n        className={classNames}\n      >\n        <div style={{ transform: `translateX(${shift}px)` }} className='sidebarSectionsContainer'>\n          {this._renderSection({\n            className: 'roomsSection',\n            title: 'Rooms',\n            section: <Rooms />\n          })}\n          {this._renderSection({\n            className: 'roomsSection',\n            title: 'Rooms',\n            section: <Rooms />\n          })}\n          {this._renderSection({\n            className: 'favoritesSection',\n            title: 'Favorites',\n            section: <Favorites />\n          })}\n        </div>\n        <AreaIndicators\n          areas={Object.keys(ZONES_TRANSLATE_SHIFT).length}\n          activeArea={id}\n          setActiveArea={this._handleSetCurrentArea}\n        />\n      </aside>\n    );\n  }\n}\n\nexport default Sidebar;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\n\nimport { CONNECTED, DISCONNECTED } from '../../../constants/connectionStatuses';\n\nconst USER_TOGGLER_TITLE = 'Sidebar';\nconst HEARTS = {\n  thin: (\n    <svg xmlns='http://www.w3.org/2000/svg' width='16' height='16' viewBox='-2 -2 28 28' fill='currentColor'>\n      <path d='M6.28 3c3.236.001 4.973 3.491 5.72 5.031.75-1.547 2.469-5.021 5.726-5.021 2.058 0 4.274 1.309 4.274 4.182 0 3.442-4.744 7.851-10 13-5.258-5.151-10-9.559-10-13 0-2.676 1.965-4.193 4.28-4.192zm.001-2c-3.183 0-6.281 2.187-6.281 6.192 0 4.661 5.57 9.427 12 15.808 6.43-6.381 12-11.147 12-15.808 0-4.011-3.097-6.182-6.274-6.182-2.204 0-4.446 1.042-5.726 3.238-1.285-2.206-3.522-3.248-5.719-3.248z' />\n    </svg>\n  ),\n  full: (\n    <svg xmlns='http://www.w3.org/2000/svg' width='16' height='16' viewBox='-2 -2 28 28' fill='currentColor'>\n      <path d='M12 4.248c-3.148-5.402-12-3.825-12 2.944 0 4.661 5.571 9.427 12 15.808 6.43-6.381 12-11.147 12-15.808 0-6.792-8.875-8.306-12-2.944z' />\n    </svg>\n  )\n};\n\nclass Statuses extends React.Component {\n  static propTypes = {\n    showSidebar: PropTypes.bool,\n    connectionStatus: PropTypes.string,\n    sidebarToggler: PropTypes.func,\n    setFavorite: PropTypes.func,\n    isFavorite: PropTypes.bool,\n    userFavoriteChats: PropTypes.array,\n    currentUserID: PropTypes.string,\n    currentChatID: PropTypes.string,\n    currentChatType: PropTypes.string,\n    users: PropTypes.array\n  }\n\n  static defaultProps = {\n    showSidebar: false,\n    connectionStatus: 'disconnected',\n    sidebarToggler: () => {},\n    setFavorite: () => {},\n    userFavoriteChats: [],\n    currentUserID: null,\n    currentChatID: null,\n    currentChatType: null,\n    isFavorite: false,\n    users: []\n  }\n\n  _handleToggleClick = () => {\n    const { showSidebar, sidebarToggler } = this.props;\n\n    !showSidebar && sidebarToggler();\n  }\n\n  _handleFavoriteClick = () => {\n    const { setFavorite, currentUserID, currentChatID, currentChatType } = this.props;\n\n    setFavorite({ userID: currentUserID, chat: { ID: currentChatID, type: currentChatType } });\n  }\n\n  _getSidebarToggle = () => {\n    const { showSidebar = false } = this.props;\n\n    return (\n      <button\n        className={`asideButtonToggle${showSidebar ? ' asideButtonToggleActive' : ''}`}\n        type='button'\n        onClick={this._handleToggleClick}\n      >\n        {USER_TOGGLER_TITLE}\n      </button>\n    );\n  }\n\n  _getFavoriteButton = () => {\n    const { userFavoriteChats, currentChatID, currentChatType } = this.props;\n    const { thin, full } = HEARTS;\n\n    const checkIsFavoriteChat = () => (\n      userFavoriteChats.find(chat => (chat.ID === currentChatID) && (chat.type === currentChatType))\n    );\n\n    const currentHeart = checkIsFavoriteChat() ? full : thin;\n\n    return (\n      <span className='usersRoomFavorite'>\n        <button type='button' className='usersRoomFavoriteButton' onClick={this._handleFavoriteClick}>\n          {currentHeart}\n        </button>\n      </span>\n    );\n  }\n\n  _getUsersCountInChat = () => {\n    const { users } = this.props;\n\n    return (\n      <span className='usersRoomCount'>\n        <i className='usersRoomCountIcon' />\n        {users.length}\n      </span>\n    );\n  }\n\n  _getConnectionStatus = () => {\n    const { connectionStatus } = this.props;\n\n    const connectionStatusesClasses = classnames({\n      connectionStatusIcon–°onnected: connectionStatus === CONNECTED,\n      connectionStatusIconDisconnected: connectionStatus === DISCONNECTED\n    });\n\n    return (\n      <span className='connectionStatus'>\n        <i className='connectionStatusIconMain' />\n        <i className={`connectionStatusIcon ${connectionStatusesClasses}`} />\n      </span>\n    );\n  }\n\n  render() {\n    return (\n      <div className='statusesWrap'>\n        {this._getSidebarToggle()}\n        {this._getFavoriteButton()}\n        {'|'}\n        {this._getUsersCountInChat()}\n        {'|'}\n        {this._getConnectionStatus()}\n      </div>\n    );\n  }\n}\n\nexport default Statuses;\n","import { connect } from 'react-redux';\nimport Statuses from '../components/Main/Statuses';\nimport { sidebarToggler, setFavorite } from '../controller/actions';\n\nconst mapStateToProps = state => ({\n  isFavorite: state.currentChat.isFavorite,\n  currentUserID: state.auth.user.uuid,\n  currentChatID: state.currentChat.chatID,\n  currentChatType: state.currentChat.chatType,\n  userFavoriteChats: state.currentUser.favoriteChats,\n  showSidebar: state.common.showSidebar,\n  connectionStatus: state.currentUser.connectionStatus,\n  users: state.users.list\n});\n\nconst mapDispatchToState = dispatch => ({\n  sidebarToggler: () => dispatch(sidebarToggler()),\n  setFavorite: payload => dispatch(setFavorite(payload))\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToState\n)(Statuses);\n","const getTimestamp = timestamp => {\n  const date = new Date(timestamp);\n  const hours = date.getHours() < 10 ? `0${date.getHours()}` : date.getHours();\n  const minutes = date.getMinutes() < 10 ? `0${date.getMinutes()}` : date.getMinutes();\n\n  return `${hours}:${minutes}`;\n};\n\nexport default getTimestamp;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport getTimestamp from '../../../utils/getTime';\n\nclass MessageRegular extends React.PureComponent {\n  static propTypes = {\n    message: PropTypes.string.isRequired,\n    author: PropTypes.string.isRequired,\n    timestamp: PropTypes.number.isRequired\n  };\n\n  render() {\n    const { message, author, timestamp } = this.props;\n\n    return (\n      <div className='message messageWrap'>\n        <span className='authorWrap'>\n          <svg width='100%' height='100%' data-jdenticon-value={author} />\n        </span>\n        <div className='messageContainer'>\n          <div className='messageTopSection'>\n            <span className='authorName'>{author}</span>\n            <span className='messageTimestamp'>{getTimestamp(timestamp)}</span>\n          </div>\n          <div className='messageBottomSection'>\n            <span className='textWrap'>{message}</span>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default MessageRegular;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport getTimestamp from '../../../utils/getTime';\n\nclass MessageUser extends React.PureComponent {\n  static propTypes = {\n    isCurrentUser: PropTypes.bool,\n    uuid: PropTypes.number.isRequired,\n    message: PropTypes.string.isRequired,\n    timestamp: PropTypes.number.isRequired\n  }\n\n  static defaultProps = {\n    isCurrentUser: false\n  }\n\n  _renderDate = () => {\n    const { timestamp } = this.props;\n\n    return getTimestamp(timestamp);\n  }\n\n  render() {\n    const { isCurrentUser, message, uuid } = this.props;\n\n    return (\n      <div key={uuid} className={`message newUserConnectedWrap${isCurrentUser ? ' newUsercurrentUserMessage' : ''}`}>\n        <span className='newUserConnectedMessage'>\n          {message}\n        </span>\n        <span className='newUserConnectedTimestamp'>\n          {this._renderDate()}\n        </span>\n      </div>\n    );\n  }\n}\n\nexport default MessageUser;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport MessageRegular from './MessageRegular';\nimport MessageUser from './MessageUser';\nimport Placeholder from '../../LoadingPlaceholder';\n\nclass MessagesList extends React.Component {\n  static propTypes = {\n    typingUsers: PropTypes.array,\n    currentUserName: PropTypes.string,\n    messages: PropTypes.arrayOf(\n      PropTypes.shape({\n        uuid: PropTypes.number.isRequired,\n        message: PropTypes.string.isRequired\n      }).isRequired\n    ).isRequired\n  };\n\n  static defaultProps = {\n    currentUserName: '',\n    typingUsers: []\n  }\n\n  // eslint-disable-next-line react/sort-comp\n  _messageTypes = {\n    user: message => <MessageUser key={message.uuid} {...message} />,\n    message: message => <MessageRegular key={message.uuid} {...message} />\n  }\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      scrollHeight: 0\n    };\n\n    this.ref = React.createRef();\n  }\n\n  componentDidMount() {\n    this._setScrollHeightState();\n  }\n\n  componentDidUpdate(nextProps, prevState) {\n    if (prevState.scrollHeight !== this.ref.current.scrollHeight) {\n      this._setScrollHeightState();\n      this._setScrollTop();\n    }\n  }\n\n  _setScrollHeightState = () => {\n    this.setState({\n      scrollHeight: this.ref.current.scrollHeight || 0\n    });\n  }\n\n  _setScrollTop = () => {\n    const currentRef = this.ref.current;\n\n    currentRef.scrollTop = currentRef.scrollHeight;\n  }\n\n  _getCurrentUserMessages = messages => {\n    const { currentUserName } = this.props;\n\n    if (!messages || messages.length === 0) {\n      return (\n        <Placeholder text='Trying to load message list...' width='40px' height='40px' />\n      );\n    }\n\n    const normalizedMessages = messages.map(message => {\n      const spitedMessage = message.message.split(' ');\n      const isCurrentUserMessage = message.layout === 'user' && spitedMessage[0] === currentUserName;\n\n      if (isCurrentUserMessage) {\n        // fixing system messages for current user\n        spitedMessage[0] = 'You';\n        spitedMessage[1] = spitedMessage[1] === 'is' ? 'are' : 'have';\n        spitedMessage[2] = spitedMessage[1] === 'have' ? 'leaved' : spitedMessage[2];\n\n        return {\n          ...message,\n          ...isCurrentUserMessage && { isCurrentUser: isCurrentUserMessage },\n          message: spitedMessage.join(' ')\n        };\n      }\n\n      return message;\n    });\n\n    return normalizedMessages;\n  }\n\n  _renderMessages = () => {\n    const { messages = [] } = this.props;\n\n    if (!messages || messages.length === 0) {\n      return (\n        <Placeholder text='Trying to load message list...' width='40px' height='40px' />\n      );\n    }\n\n    const normalizedMessages = this._getCurrentUserMessages(messages);\n\n    return normalizedMessages.map(message => {\n      const MessageToRender = this._messageTypes[message.layout] || this._messageTypes.message;\n\n      return MessageToRender(message);\n    });\n  }\n\n  render() {\n    return (\n      <div ref={this.ref} className='messagesList'>{this._renderMessages()}</div>\n    );\n  }\n}\n\nexport default MessagesList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport MessagesList from '../Messages/MessagesList';\n\nclass Chat extends React.Component {\n  static propTypes = {\n    chats: PropTypes.object,\n    currentUserName: PropTypes.string,\n    currentChat: PropTypes.object\n  };\n\n  static defaultProps = {\n    chats: {},\n    currentUserName: '',\n    currentChat: {\n      chatType: 'rooms',\n      chatID: 'global'\n    }\n  }\n\n  _getCurrentChatMessages = () => {\n    const { chats, currentChat: { chatType, chatID } } = this.props;\n\n    const chatToRender = chats[chatType] && chats[chatType].find(channel => {\n      // console.log(channel, chatID, 'channel, chatID');\n\n      return channel.ID === chatID || false;\n    });\n\n    return chatToRender || [];\n  }\n\n  render() {\n    const { currentUserName } = this.props;\n\n    const { messages = [] } = this._getCurrentChatMessages();\n\n    return (\n      <MessagesList messages={messages} currentUserName={currentUserName} />\n    );\n  }\n}\n\nexport default Chat;\n","import { connect } from 'react-redux';\nimport Chat from '../components/Main/Chat';\n\nconst mapDispatchToState = state => {\n  return ({\n    chats: state.chats,\n    currentUserName: state.auth.user.name,\n    currentChat: state.currentChat\n  });\n};\n\nexport default connect(\n  mapDispatchToState,\n  null\n)(Chat);\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst TYPING_LABEL = 'typing';\n\nclass LiveMessageTyping extends React.PureComponent {\n  static propTypes = {\n    currentChat: PropTypes.object,\n    typingUsers: PropTypes.array,\n    isSomeoneTyping: PropTypes.bool\n  }\n\n  static defaultProps = {\n    currentChat: {},\n    typingUsers: [],\n    isSomeoneTyping: false\n  }\n\n  _findCurrentChatTypingUsers = () => {\n    const { currentChat = {}, typingUsers = [] } = this.props;\n\n    const chatTypingUsers = [];\n\n    typingUsers.forEach(typingUser => {\n      if (typingUser.chat.chatID === currentChat.chatID && typingUser.chat.chatType === currentChat.chatType) {\n        chatTypingUsers.push(typingUser);\n      }\n    });\n\n    return chatTypingUsers;\n  }\n\n  _getTypingUsers = chatTypingUsers => {\n    let typingUsersNames = '';\n\n    chatTypingUsers.forEach((user, index) => {\n      typingUsersNames += (index === chatTypingUsers.length - 1) ? user.name : `${user.name}, `;\n    });\n\n    return typingUsersNames;\n  }\n\n  _renderTypingText = chatTypingUsers => {\n    const { typingUsers } = this.props;\n\n    const typingPostfixCounter = typingUsers.length > 1 ? 'are' : 'is';\n    const typingUsersString = this._getTypingUsers(chatTypingUsers);\n\n    return `${typingUsersString} ${typingPostfixCounter} ${TYPING_LABEL}`;\n  }\n\n  render() {\n    const chatTypingUsers = this._findCurrentChatTypingUsers();\n\n    if (chatTypingUsers.length === 0) return null;\n\n    return (\n      <div className='liveMessageWrap'>\n        <span className='liveMessageText'>\n          {`${this._renderTypingText(chatTypingUsers)}`}\n        </span>\n        <span className='liveDots' />\n      </div>\n    );\n  }\n}\n\nexport default LiveMessageTyping;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { CONNECTED } from '../../../constants';\n\nconst MESSAGE_TYPE = 'message';\n\nclass AddMessage extends React.PureComponent {\n  static propTypes = {\n    dispatchLiveTyping: PropTypes.func.isRequired,\n    dispatchMessage: PropTypes.func.isRequired,\n    currentChat: PropTypes.object.isRequired,\n    currentUser: PropTypes.shape({\n      uuid: PropTypes.string,\n      name: PropTypes.string\n    }).isRequired,\n    auth: PropTypes.object.isRequired,\n  }\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      value: ''\n    };\n  }\n\n  _getMessageTimestamp = () => {\n    const timestamp = Date.now();\n\n    return timestamp;\n  }\n\n  _handleSendMessage = () => {\n    const { value } = this.state;\n    const {\n      currentChat: { chatType, chatID },\n      currentUser: { name, uuid: uuidAuthor, connectionStatus }, dispatchMessage\n    } = this.props;\n\n    if (!value || value.length === 0 || connectionStatus !== CONNECTED) return;\n\n    dispatchMessage({\n      chat: {\n        type: chatType,\n        ID: chatID\n      },\n      messageType: MESSAGE_TYPE,\n      message: value,\n      uuid: this.props.auth.user.id,\n      uuidAuthor,\n      author: this.props.auth.user.name,\n      timestamp: this._getMessageTimestamp()\n    });\n\n    this._resetStateValue();\n  }\n\n  _setStateValue = e => {\n    this.setState({\n      value: e.target.value\n    });\n  }\n\n  _resetStateValue = () => {\n    this.setState({\n      value: ''\n    });\n  }\n\n  _onKeyPressHandler = e => {\n    if (e.key === 'Enter') {\n      this._handleSendMessage();\n    }\n  }\n\n  _onClickHandler = () => {\n    this._handleSendMessage();\n  }\n\n  _onChangeHandler = e => {\n    const { currentChat, currentUser: { name, uuid }, dispatchLiveTyping } = this.props;\n\n    dispatchLiveTyping({ chat: currentChat, author: name, uuid });\n    this._setStateValue(e);\n  }\n\n  render() {\n    const { value } = this.state;\n\n    return (\n      <section id='new-message'>\n        <input\n          onKeyPress={this._onKeyPressHandler}\n          onChange={this._onChangeHandler}\n          type='text'\n          placeholder='Type your message...'\n          value={value}\n        />\n        <button className={`sendMessageButton${value ? ' sendMessageButtonActive' : ''}`} type='button' onClick={this._onClickHandler}>\n          <svg\n            fill='#fff'\n            xmlns='http://www.w3.org/2000/svg'\n            viewBox='0 0 512 512'\n            width='25px'\n            height='25px'\n          >\n            <path\n              d='M476 3.2L12.5 270.6c-18.1 10.4-15.8 35.6 2.2 43.2L121 358.4l287.3-253.2c5.5-4.9 13.3 2.6 8.6 8.3L176 407v80.5c0 23.6 28.5 32.9 42.5 15.8L282 426l124.6 52.2c14.2 6 30.4-2.9 33-18.2l72-432C515 7.8 493.3-6.8 476 3.2z'\n            />\n          </svg>\n        </button>\n      </section>\n    );\n  }\n}\n\nexport default AddMessage;\n","import { connect } from 'react-redux';\nimport AddMessageComponent from '../components/Main/Messages/AddMessage';\nimport { addMessage, userTyping } from '../controller/actions';\n\nconst mapDispatchToState = state => {\n  return ({\n    currentUser: state.currentUser,\n    currentChat: state.currentChat,\n    auth: state.auth\n  });\n};\n\nconst mapDispatchToProps = dispatch => ({\n  // eslint-disable-next-line max-len\n  dispatchMessage: payload => dispatch(addMessage(payload)),\n  dispatchLiveTyping: payload => dispatch(userTyping(payload))\n});\n\nexport default connect(\n  mapDispatchToState,\n  mapDispatchToProps\n)(AddMessageComponent);\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Statuses from '../../containers/Statuses';\nimport SectionTitle from '../SectionTitle';\nimport Chat from '../../containers/Chat';\nimport LiveMessageTyping from './LiveMessageTyping';\nimport AddMessage from '../../containers/AddMessage';\n\nclass Main extends React.Component {\n  static propTypes = {\n    typingUsers: PropTypes.array,\n    currentChat: PropTypes.shape({\n      title: PropTypes.string,\n      chatType: PropTypes.string,\n      chatID: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n    }),\n    connectionStatus: PropTypes.string,\n    showSidebar: PropTypes.bool,\n    users: PropTypes.array,\n    hideSidebar: PropTypes.func\n  }\n\n  static defaultProps = {\n    currentChat: {\n      title: 'global',\n      chatType: 'global',\n      chatID: 'global'\n    },\n    connectionStatus: '',\n    typingUsers: [],\n    users: [],\n    showSidebar: false,\n    hideSidebar: () => {}\n  }\n\n  _hideSidebar = () => {\n    const { showSidebar, hideSidebar } = this.props;\n\n    showSidebar && hideSidebar();\n  }\n\n  _handleClick = () => {\n    this._hideSidebar();\n  }\n\n  _getUsersCountInChat = () => {\n    const { users } = this.props;\n\n    return (\n      <span className='usersRoomCount'>\n        <i className='usersRoomCountIcon' />\n        {`${users.length} | `}\n      </span>\n    );\n  }\n\n  render() {\n    const { currentChat, typingUsers } = this.props;\n\n    return (\n      <section role='button' onKeyDown={undefined} id='main' onClick={this._handleClick}>\n        <div className='topSectionMain'>\n          <SectionTitle title={`#${currentChat.title}`}>\n            <Statuses />\n          </SectionTitle>\n        </div>\n        <div className='middleSectionMain'>\n          <Chat />\n          <LiveMessageTyping currentChat={currentChat} typingUsers={typingUsers} />\n        </div>\n        <div className='bottomSectionMain'>\n          <AddMessage />\n        </div>\n      </section>\n    );\n  }\n}\n\nexport default Main;\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\n\nclass PopUp extends PureComponent {\n  static propTypes = {\n    children: PropTypes.node.isRequired,\n    type: PropTypes.string\n  }\n\n  static defaultProps = {\n    type: ''\n  }\n\n  render() {\n    const { children, type } = this.props;\n\n    return (\n      <div className={`popUpContainer ${type}`}>\n        {children}\n      </div>\n    );\n  }\n}\n\nexport default PopUp;\n","const userDisconnected = {\n  message: 'You\\'re disconnected due to the non-activity! Refresh the page to restart, please.',\n  type: 'error',\n  classNames: 'errorText',\n  isCloseButton: true,\n  button: {\n    active: true,\n    type: 'link',\n    href: document.location.href,\n    buttonClass: '',\n    target: '_self',\n    buttonText: 'Reload'\n  }\n};\n\nconst userIsNotConnected = {\n  message: 'You\\'re still don\\'t connected to the server. Doing my best...',\n  type: 'info',\n  classNames: 'infoText',\n  showSpinner: true\n};\n\nexport default {\n  userDisconnected,\n  userIsNotConnected\n};\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport PopUp from '../PopUp';\nimport Spinner from '../Spinner';\nimport debugHandlers from '../../helpers/debugMessageHandlers';\n\nclass DebugInfo extends React.PureComponent {\n  static propTypes = {\n    errorType: PropTypes.string,\n    showDebug: PropTypes.bool,\n    hideDebugFunc: PropTypes.func\n  }\n\n  static defaultProps = {\n    errorType: '',\n    showDebug: false,\n    hideDebugFunc: () => {}\n  }\n\n  _getDebugData = () => {\n    const { errorType } = this.props;\n\n    if (!errorType || !debugHandlers[errorType]) return {};\n\n    return debugHandlers[errorType];\n  }\n\n  _renderMessage = () => {\n    const { className = '', message = '' } = this._getDebugData();\n\n    return (\n      <span className={`debugText ${className}`}>{message}</span>\n    );\n  }\n\n  _renderSpinner = () => {\n    const { showSpinner = false } = this._getDebugData();\n\n    if (!showSpinner) return null;\n\n    return <Spinner width='50px' height='50px' />;\n  }\n\n  _getCustomButton = () => {\n    const { button } = this._getDebugData();\n\n    if (!button || !button.active) return null;\n\n    const { type = 'button', href = '', buttonClass = '', buttonText = '', target = '' } = button;\n\n    const isLink = type !== 'button';\n    const CustomButtonTag = isLink ? 'a' : 'button';\n\n    const buttonConfig = {\n      type: 'button',\n      className: `debugButton ${buttonClass}`,\n      ...isLink && {\n        href,\n        target\n      }\n    };\n\n    return (\n      <CustomButtonTag {...buttonConfig}>\n        {buttonText}\n      </CustomButtonTag>\n    );\n  }\n\n  _getCloseButton = () => {\n    const { hideDebugFunc } = this.props;\n    const { isCloseButton } = this._getDebugData();\n\n    if (!isCloseButton) return null;\n\n    return (\n      <button type='button' className='debugButton closeDebugButton' onClick={hideDebugFunc}>\n        Close\n      </button>\n    );\n  }\n\n  _renderButtons = () => {\n    return (\n      <div className='debugButtonsWrap'>\n        {this._getCustomButton()}\n        {this._getCloseButton()}\n      </div>\n    );\n  }\n\n  render() {\n    const { showDebug } = this.props;\n    const { type = '', message = '', showSpinner = '' } = this._getDebugData();\n\n    if (!showDebug || !message) return null;\n\n    return (\n      <PopUp type={type}>\n        <div className={`debugContainer${showSpinner && ' spinner'}`}>\n          {this._renderMessage()}\n          {this._renderSpinner()}\n          {this._renderButtons()}\n        </div>\n      </PopUp>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  errorType: state.debug.errorType,\n  showDebug: state.debug.showDebug\n});\n\nexport default connect(mapStateToProps, null)(DebugInfo);\n","import { connect } from 'react-redux';\nimport { Sidebar } from '../components';\n\nconst mapStateToProps = state => ({\n  showSidebar: state.common.showSidebar\n});\n\nexport default connect(\n  mapStateToProps,\n  null\n)(Sidebar);\n","import { connect } from 'react-redux';\nimport { Main } from '../components';\nimport { sidebarToggler, hideSidebar } from '../controller/actions';\n\nconst mapDispatchToState = state => {\n  return {\n    users: state.users.list,\n    showSidebar: state.common.showSidebar,\n    connectionStatus: state.auth.user.connectionStatus,\n    currentChat: state.currentChat,\n    typingUsers: state.common.typingUsers\n  };\n};\n\nconst mapDispatchStateToProps = dispatch => ({\n  sidebarToggler: () => dispatch(sidebarToggler()),\n  hideSidebar: () => dispatch(hideSidebar())\n});\n\nexport default connect(\n  mapDispatchToState,\n  mapDispatchStateToProps\n)(Main);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport classnames from 'classnames';\nimport PropTypes from 'prop-types';\n\nimport Sidebar from '../containers/Sidebar';\nimport Main from '../containers/Main';\n\nimport { CONNECTED, DISCONNECTED } from '../constants/connectionStatuses';\n\nimport '../App.css';\n\nclass AppLayout extends React.Component {\n  static propTypes = {\n    isAuth: PropTypes.bool,\n    connectionStatus: PropTypes.string,\n    disableBlurOverlay: PropTypes.bool\n  }\n\n  static defaultProps = {\n    connectionStatus: '',\n    isAuth: false,\n    disableBlurOverlay: false\n  }\n\n  _connectionLayoutChecker = () => {\n    const { connectionStatus, disableBlurOverlay } = this.props;\n\n    const connectionClassesLayout = classnames({\n      connectedUserOvelay: connectionStatus === CONNECTED,\n      disconnectedUserOverlay: connectionStatus === DISCONNECTED,\n      destroyBlurOverlay: disableBlurOverlay\n    });\n\n    return connectionClassesLayout;\n  }\n\n  _renderMainApp = () => {\n    return (\n      //<div id='container' className={`mainOverlay ${this._connectionLayoutChecker()}`}>\n      <div id='container'>\n        <Sidebar />\n        <Main />\n      </div>\n      //</div>\n    );\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        {this._renderMainApp()}\n      </React.Fragment>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  connectionStatus: state.currentUser.connectionStatus,\n  disableBlurOverlay: state.common.disableBlurOverlay,\n  isAuth: state.currentUser.isAuth\n});\n\nexport default connect(\n  mapStateToProps,\n  null\n)(AppLayout);\n","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport AppLayout from '../../layout';\nconst PrivateRoute = ({ component: Component, auth, ...rest }) => (\n  <Route\n    {...rest}\n    render={props =>\n      auth.isAuthenticated === true ? (\n        <div className='mainWrap'>\n        <Component {...props} />\n        <AppLayout></AppLayout>\n        </div>\n      ) : (\n        <Redirect to=\"/login\" />\n      )\n    }\n  />\n);\nPrivateRoute.propTypes = {\n  auth: PropTypes.object.isRequired\n};\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\nexport default connect(mapStateToProps)(PrivateRoute);","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { logoutUser } from \"../../controller/actions/authActions\";\nimport { userDisconected } from \"../../controller/actions\"\nclass Dashboard extends Component {\n  onLogoutClick = e => {\n    e.preventDefault();\n\n    this.props.userDisconected();\n    this.props.logoutUser();\n  };\n    render() {\n    const { user } = this.props.auth;\n    return (\n      <div style={{ height: \"75vh\" }} className=\"container valign-wrapper\">\n        <div className=\"row\">\n          <div className=\"col s12 center-align\">\n            <h4>\n              <b>Hey there,</b> {user.name.split(\" \")[0]}\n              <p className=\"flow-text grey-text text-darken-1\">\n                You are logged into a Chat App{\" \"}\n                <span style={{ fontFamily: \"monospace\" }}></span> üëè\n              </p>\n            </h4>\n            <button\n              style={{\n                width: \"150px\",\n                borderRadius: \"3px\",\n                letterSpacing: \"1.5px\",\n                marginTop: \"1rem\"\n              }}\n              onClick={this.onLogoutClick}\n              className=\"btn btn-large waves-effect waves-light hoverable blue accent-3\"\n            >\n              Logout\n            </button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\nDashboard.propTypes = {\n  logoutUser: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired\n};\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\nexport default connect(\n  mapStateToProps,\n  { logoutUser, userDisconected }\n)(Dashboard);","import React, { Component } from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport jwt_decode from \"jwt-decode\";\nimport setAuthToken from \"./utils/setAuthToken\";\nimport { setCurrentUser, logoutUser } from \"./controller/actions/authActions\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\nimport Navbar from \"./components/layout/Navbar\";\nimport Landing from \"./components/layout/Landing\";\nimport Register from \"./components/auth/Register\";\nimport Login from \"./components/auth/Login\";\nimport PrivateRoute from \"./components/private-route/PrivateRoute\";\nimport Dashboard from \"./components/dashboard/Dashboard\";\n\nimport { initialLoad, userInitializationFinish, userInitializationStart } from \"./controller/actions\"\n// Check for token to keep user logged in\nif (localStorage.jwtToken) {\n  // Set auth token header auth\n  const token = localStorage.jwtToken;\n  setAuthToken(token);\n  // Decode token and get user info and exp\n  const decoded = jwt_decode(token);\n  // Set user and isAuthenticated\n  store.dispatch(setCurrentUser(decoded));\n\n  //store.dispatch(userInitializationStart());\n  //store.dispatch(initialLoad(decoded.payload));\n  //console.log(decoded.payload)\n  //store.dispatch(userInitializationFinish());\n\n// Check for expired token\n  const currentTime = Date.now() / 1000; // to get in milliseconds\n  if (decoded.exp < currentTime) {\n    // Logout user\n    store.dispatch(logoutUser());\n    // Redirect to login\n    window.location.href = \"./login\";\n  }\n}\nclass App extends Component {\n  render() {\n    return (\n      <Provider store={store}>\n        <Router>\n          <div className=\"App\">\n            <Navbar />\n            <Route exact path=\"/\" component={Landing} />\n            <Route exact path=\"/register\" component={Register} />\n            <Route exact path=\"/login\" component={Login} />\n            <Switch>\n              <PrivateRoute exact path=\"/dashboard\" component={Dashboard} />\n            </Switch>\n          </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}