services:
    nodejs:
        build:
        context: .
        dockerfile: Dockerfile
        image: nodejs
        command: npm run start
        container_name: nodejs
        restart: unless-stopped
        ports:
            # Service will be accessible on the host at port 9090.
            - "80:${PORT:-8080}"
        environment:
            # /run/docs/reference/container-contract
            PORT: ${PORT:-8080}
        networks:
        - app-network
    webserver:
        image: nginx:latest
        container_name: webserver
        restart: unless-stopped
        ports:
        - "80:80"
        - "443:443"
        volumes:
        - web-root:/var/www/html
        - ./nginx-conf:/etc/nginx/conf.d
        - certbot-etc:/etc/letsencrypt
        - certbot-var:/var/lib/letsencrypt
        - dhparam:/etc/ssl/certs
        depends_on:
        - nodejs
        networks:
        - app-network

    certbot:
        image: certbot/certbot
        container_name: certbot
        volumes:
        - certbot-etc:/etc/letsencrypt
        - certbot-var:/var/lib/letsencrypt
        - web-root:/var/www/html
        depends_on:
        - webserver
        command: certonly --webroot --webroot-path=/var/www/html --email sammy@iic2713.me --agree-tos --no-eff-email --force-renewal -d iic2713.me  -d www.iic2713.me

networks:
    app-network:
        driver: bridge

volumes:
  certbot-etc:
  certbot-var:
  web-root:
    driver: local
    driver_opts:
      type: none
      device: /home/ubuntu/node_project/views/
      o: bind
  dhparam:
    driver: local
    driver_opts:
      type: none
      device: /home/ubuntu/node_project/dhparam/
      o: bind

